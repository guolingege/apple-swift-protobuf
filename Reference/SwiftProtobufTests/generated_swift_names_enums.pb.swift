// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: generated_swift_names_enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// See Makefile for the logic that generates this
/// Protoc errors imply this file is being generated incorrectly
/// Swift compile errors are probably bugs in protoc-gen-swift

import AppleSwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of AppleSwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: AppleSwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: AppleSwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums: Sendable {
  // AppleSwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the AppleSwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = AppleSwiftProtobuf.UnknownStorage()

  enum addPath: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAddPath // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAddPath
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAddPath
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAddPath: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.addPath] = [
      .noneAddPath,
    ]

  }

  enum adjusted: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAdjusted // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAdjusted
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAdjusted
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAdjusted: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.adjusted] = [
      .noneAdjusted,
    ]

  }

  enum aggregateValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAggregateValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAggregateValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAggregateValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAggregateValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.aggregateValue] = [
      .noneAggregateValue,
    ]

  }

  enum allCases: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAllCases // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAllCases
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAllCases
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAllCases: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.allCases] = [
      .noneAllCases,
    ]

  }

  enum allowAlias: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAllowAlias // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAllowAlias
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAllowAlias
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAllowAlias: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.allowAlias] = [
      .noneAllowAlias,
    ]

  }

  enum alwaysPrintEnumsAsInts: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAlwaysPrintEnumsAsInts // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAlwaysPrintEnumsAsInts
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAlwaysPrintEnumsAsInts
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAlwaysPrintEnumsAsInts: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.alwaysPrintEnumsAsInts] = [
      .noneAlwaysPrintEnumsAsInts,
    ]

  }

  enum alwaysPrintInt64sAsNumbers: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAlwaysPrintInt64SAsNumbers // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAlwaysPrintInt64SAsNumbers
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAlwaysPrintInt64SAsNumbers
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAlwaysPrintInt64SAsNumbers: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.alwaysPrintInt64sAsNumbers] = [
      .noneAlwaysPrintInt64SAsNumbers,
    ]

  }

  enum annotation: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAnnotation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAnnotation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAnnotation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAnnotation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.annotation] = [
      .noneAnnotation,
    ]

  }

  enum any: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAny // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAny
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAny
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAny: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.any] = [
      .noneAny,
    ]

  }

  enum AnyExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAnyExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAnyExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAnyExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAnyExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyExtensionField] = [
      .noneAnyExtensionField,
    ]

  }

  enum AnyMessageExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAnyMessageExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAnyMessageExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAnyMessageExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAnyMessageExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyMessageExtension] = [
      .noneAnyMessageExtension,
    ]

  }

  enum AnyMessageStorage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAnyMessageStorage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAnyMessageStorage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAnyMessageStorage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAnyMessageStorage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyMessageStorage] = [
      .noneAnyMessageStorage,
    ]

  }

  enum AnyUnpackError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAnyUnpackError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAnyUnpackError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAnyUnpackError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAnyUnpackError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyUnpackError] = [
      .noneAnyUnpackError,
    ]

  }

  enum Api: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneApi // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneApi
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneApi
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneApi: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Api] = [
      .noneApi,
    ]

  }

  enum appended: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAppended // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAppended
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAppended
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAppended: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appended] = [
      .noneAppended,
    ]

  }

  enum appendUIntHex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAppendUintHex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAppendUintHex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAppendUintHex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAppendUintHex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appendUIntHex] = [
      .noneAppendUintHex,
    ]

  }

  enum appendUnknown: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAppendUnknown // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAppendUnknown
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAppendUnknown
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAppendUnknown: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appendUnknown] = [
      .noneAppendUnknown,
    ]

  }

  enum areAllInitialized: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAreAllInitialized // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAreAllInitialized
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAreAllInitialized
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAreAllInitialized: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.areAllInitialized] = [
      .noneAreAllInitialized,
    ]

  }

  enum Array: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneArray // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneArray
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneArray
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneArray: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Array] = [
      .noneArray,
    ]

  }

  enum arrayDepth: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneArrayDepth // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneArrayDepth
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneArrayDepth
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneArrayDepth: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arrayDepth] = [
      .noneArrayDepth,
    ]

  }

  enum arrayLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneArrayLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneArrayLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneArrayLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneArrayLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arrayLiteral] = [
      .noneArrayLiteral,
    ]

  }

  enum arraySeparator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneArraySeparator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneArraySeparator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneArraySeparator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneArraySeparator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arraySeparator] = [
      .noneArraySeparator,
    ]

  }

  enum asEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAs // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAs
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAs
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAs: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asEnum] = [
      .noneAs,
    ]

  }

  enum asciiOpenCurlyBracket: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsciiOpenCurlyBracket // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsciiOpenCurlyBracket
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsciiOpenCurlyBracket
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsciiOpenCurlyBracket: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asciiOpenCurlyBracket] = [
      .noneAsciiOpenCurlyBracket,
    ]

  }

  enum asciiZero: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsciiZero // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsciiZero
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsciiZero
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsciiZero: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asciiZero] = [
      .noneAsciiZero,
    ]

  }

  enum async: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsync // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsync
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsync
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsync: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.async] = [
      .noneAsync,
    ]

  }

  enum AsyncIterator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsyncIterator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsyncIterator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsyncIterator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsyncIterator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncIterator] = [
      .noneAsyncIterator,
    ]

  }

  enum AsyncIteratorProtocol: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsyncIteratorProtocol // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsyncIteratorProtocol
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsyncIteratorProtocol
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsyncIteratorProtocol: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncIteratorProtocol] = [
      .noneAsyncIteratorProtocol,
    ]

  }

  enum AsyncMessageSequence: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAsyncMessageSequence // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAsyncMessageSequence
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAsyncMessageSequence
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAsyncMessageSequence: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncMessageSequence] = [
      .noneAsyncMessageSequence,
    ]

  }

  enum available: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAvailable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAvailable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAvailable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAvailable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.available] = [
      .noneAvailable,
    ]

  }

  enum b: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneB // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneB
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneB
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneB: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.b] = [
      .noneB,
    ]

  }

  enum Base: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBase // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBase
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBase
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBase: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Base] = [
      .noneBase,
    ]

  }

  enum base64Values: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBase64Values // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBase64Values
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBase64Values
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBase64Values: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.base64Values] = [
      .noneBase64Values,
    ]

  }

  enum baseAddress: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBaseAddress // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBaseAddress
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBaseAddress
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBaseAddress: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.baseAddress] = [
      .noneBaseAddress,
    ]

  }

  enum BaseType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBaseType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBaseType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBaseType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBaseType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BaseType] = [
      .noneBaseType,
    ]

  }

  enum begin: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBegin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBegin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBegin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBegin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.begin] = [
      .noneBegin,
    ]

  }

  enum binary: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinary // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinary
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinary
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinary: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binary] = [
      .noneBinary,
    ]

  }

  enum BinaryDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecoder] = [
      .noneBinaryDecoder,
    ]

  }

  enum BinaryDecoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryDecoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryDecoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryDecoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryDecoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecoding] = [
      .noneBinaryDecoding,
    ]

  }

  enum BinaryDecodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryDecodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryDecodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryDecodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryDecodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecodingError] = [
      .noneBinaryDecodingError,
    ]

  }

  enum BinaryDecodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryDecodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryDecodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryDecodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryDecodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecodingOptions] = [
      .noneBinaryDecodingOptions,
    ]

  }

  enum BinaryDelimited: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryDelimited // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryDelimited
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryDelimited
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryDelimited: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDelimited] = [
      .noneBinaryDelimited,
    ]

  }

  enum BinaryEncoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncoder] = [
      .noneBinaryEncoder,
    ]

  }

  enum BinaryEncodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingError] = [
      .noneBinaryEncodingError,
    ]

  }

  enum BinaryEncodingMessageSetSizeVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingMessageSetSizeVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingMessageSetSizeVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingMessageSetSizeVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingMessageSetSizeVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingMessageSetSizeVisitor] = [
      .noneBinaryEncodingMessageSetSizeVisitor,
    ]

  }

  enum BinaryEncodingMessageSetVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingMessageSetVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingMessageSetVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingMessageSetVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingMessageSetVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingMessageSetVisitor] = [
      .noneBinaryEncodingMessageSetVisitor,
    ]

  }

  enum BinaryEncodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingOptions] = [
      .noneBinaryEncodingOptions,
    ]

  }

  enum BinaryEncodingSizeVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingSizeVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingSizeVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingSizeVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingSizeVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingSizeVisitor] = [
      .noneBinaryEncodingSizeVisitor,
    ]

  }

  enum BinaryEncodingVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryEncodingVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryEncodingVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryEncodingVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryEncodingVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingVisitor] = [
      .noneBinaryEncodingVisitor,
    ]

  }

  enum binaryOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryOptions] = [
      .noneBinaryOptions,
    ]

  }

  enum binaryProtobufDelimitedMessages: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryProtobufDelimitedMessages // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryProtobufDelimitedMessages
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryProtobufDelimitedMessages
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryProtobufDelimitedMessages: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryProtobufDelimitedMessages] = [
      .noneBinaryProtobufDelimitedMessages,
    ]

  }

  enum BinaryStreamDecoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryStreamDecoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryStreamDecoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryStreamDecoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryStreamDecoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryStreamDecoding] = [
      .noneBinaryStreamDecoding,
    ]

  }

  enum binaryStreamDecodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBinaryStreamDecodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBinaryStreamDecodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBinaryStreamDecodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBinaryStreamDecodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryStreamDecodingError] = [
      .noneBinaryStreamDecodingError,
    ]

  }

  enum bitPattern: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBitPattern // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBitPattern
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBitPattern
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBitPattern: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bitPattern] = [
      .noneBitPattern,
    ]

  }

  enum body: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBody // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBody
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBody
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBody: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.body] = [
      .noneBody,
    ]

  }

  enum BoolEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBool // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBool
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBool
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBool: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BoolEnum] = [
      .noneBool,
    ]

  }

  enum booleanLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBooleanLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBooleanLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBooleanLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBooleanLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.booleanLiteral] = [
      .noneBooleanLiteral,
    ]

  }

  enum BooleanLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBooleanLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBooleanLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBooleanLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBooleanLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BooleanLiteralType] = [
      .noneBooleanLiteralType,
    ]

  }

  enum boolValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBoolValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBoolValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBoolValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBoolValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.boolValue] = [
      .noneBoolValue,
    ]

  }

  enum buffer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBuffer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBuffer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBuffer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBuffer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.buffer] = [
      .noneBuffer,
    ]

  }

  enum bytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytes] = [
      .noneBytes,
    ]

  }

  enum bytesInGroup: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBytesInGroup // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBytesInGroup
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBytesInGroup
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBytesInGroup: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesInGroup] = [
      .noneBytesInGroup,
    ]

  }

  enum bytesNeeded: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBytesNeeded // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBytesNeeded
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBytesNeeded
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBytesNeeded: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesNeeded] = [
      .noneBytesNeeded,
    ]

  }

  enum bytesRead: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBytesRead // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBytesRead
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBytesRead
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBytesRead: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesRead] = [
      .noneBytesRead,
    ]

  }

  enum BytesValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneBytesValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneBytesValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneBytesValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneBytesValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BytesValue] = [
      .noneBytesValue,
    ]

  }

  enum c: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneC // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneC
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneC
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneC: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.c] = [
      .noneC,
    ]

  }

  enum canonical: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCanonical // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCanonical
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCanonical
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCanonical: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.canonical] = [
      .noneCanonical,
    ]

  }

  enum capitalizeNext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCapitalizeNext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCapitalizeNext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCapitalizeNext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCapitalizeNext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.capitalizeNext] = [
      .noneCapitalizeNext,
    ]

  }

  enum cardinality: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCardinality // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCardinality
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCardinality
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCardinality: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.cardinality] = [
      .noneCardinality,
    ]

  }

  enum CaseIterable: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCaseIterable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCaseIterable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCaseIterable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCaseIterable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CaseIterable] = [
      .noneCaseIterable,
    ]

  }

  enum castedValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCastedValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCastedValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCastedValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCastedValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.castedValue] = [
      .noneCastedValue,
    ]

  }

  enum ccEnableArenas: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCcEnableArenas // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCcEnableArenas
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCcEnableArenas
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCcEnableArenas: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ccEnableArenas] = [
      .noneCcEnableArenas,
    ]

  }

  enum ccGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCcGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCcGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCcGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCcGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ccGenericServices] = [
      .noneCcGenericServices,
    ]

  }

  enum Character: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCharacter // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCharacter
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCharacter
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCharacter: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Character] = [
      .noneCharacter,
    ]

  }

  enum chars: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneChars // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneChars
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneChars
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneChars: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.chars] = [
      .noneChars,
    ]

  }

  enum chunk: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneChunk // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneChunk
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneChunk
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneChunk: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.chunk] = [
      .noneChunk,
    ]

  }

  enum classEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClass // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClass
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClass
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClass: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.classEnum] = [
      .noneClass,
    ]

  }

  enum clearAggregateValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearAggregateValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearAggregateValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearAggregateValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearAggregateValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearAggregateValue] = [
      .noneClearAggregateValue,
    ]

  }

  enum clearAllowAlias: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearAllowAlias // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearAllowAlias
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearAllowAlias
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearAllowAlias: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearAllowAlias] = [
      .noneClearAllowAlias,
    ]

  }

  enum clearBegin: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearBegin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearBegin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearBegin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearBegin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearBegin] = [
      .noneClearBegin,
    ]

  }

  enum clearCcEnableArenas: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearCcEnableArenas // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearCcEnableArenas
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearCcEnableArenas
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearCcEnableArenas: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCcEnableArenas] = [
      .noneClearCcEnableArenas,
    ]

  }

  enum clearCcGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearCcGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearCcGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearCcGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearCcGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCcGenericServices] = [
      .noneClearCcGenericServices,
    ]

  }

  enum clearClientStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearClientStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearClientStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearClientStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearClientStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearClientStreaming] = [
      .noneClearClientStreaming,
    ]

  }

  enum clearCsharpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearCsharpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearCsharpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearCsharpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearCsharpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCsharpNamespace] = [
      .noneClearCsharpNamespace,
    ]

  }

  enum clearCtype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearCtype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearCtype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearCtype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearCtype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCtype] = [
      .noneClearCtype,
    ]

  }

  enum clearDebugRedact: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDebugRedact // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDebugRedact
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDebugRedact
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDebugRedact: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDebugRedact] = [
      .noneClearDebugRedact,
    ]

  }

  enum clearDefaultValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDefaultValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDefaultValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDefaultValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDefaultValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDefaultValue] = [
      .noneClearDefaultValue,
    ]

  }

  enum clearDeprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecated] = [
      .noneClearDeprecated,
    ]

  }

  enum clearDeprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDeprecatedLegacyJsonFieldConflicts // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDeprecatedLegacyJsonFieldConflicts
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDeprecatedLegacyJsonFieldConflicts
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDeprecatedLegacyJsonFieldConflicts: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecatedLegacyJsonFieldConflicts] = [
      .noneClearDeprecatedLegacyJsonFieldConflicts,
    ]

  }

  enum clearDeprecationWarning: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDeprecationWarning // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDeprecationWarning
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDeprecationWarning
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDeprecationWarning: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecationWarning] = [
      .noneClearDeprecationWarning,
    ]

  }

  enum clearDoubleValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearDoubleValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearDoubleValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearDoubleValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearDoubleValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDoubleValue] = [
      .noneClearDoubleValue,
    ]

  }

  enum clearEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEdition] = [
      .noneClearEdition,
    ]

  }

  enum clearEditionDeprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEditionDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEditionDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEditionDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEditionDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionDeprecated] = [
      .noneClearEditionDeprecated,
    ]

  }

  enum clearEditionIntroduced: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEditionIntroduced // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEditionIntroduced
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEditionIntroduced
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEditionIntroduced: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionIntroduced] = [
      .noneClearEditionIntroduced,
    ]

  }

  enum clearEditionRemoved: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEditionRemoved // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEditionRemoved
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEditionRemoved
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEditionRemoved: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionRemoved] = [
      .noneClearEditionRemoved,
    ]

  }

  enum clearEnd: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEnd // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEnd
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEnd
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEnd: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEnd] = [
      .noneClearEnd,
    ]

  }

  enum clearEnumType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearEnumType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearEnumType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearEnumType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearEnumType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEnumType] = [
      .noneClearEnumType,
    ]

  }

  enum clearExtendee: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearExtendee // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearExtendee
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearExtendee
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearExtendee: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearExtendee] = [
      .noneClearExtendee,
    ]

  }

  enum clearExtensionValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearExtensionValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearExtensionValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearExtensionValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearExtensionValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearExtensionValue] = [
      .noneClearExtensionValue,
    ]

  }

  enum clearFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFeatures] = [
      .noneClearFeatures,
    ]

  }

  enum clearFeatureSupport: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearFeatureSupport // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearFeatureSupport
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearFeatureSupport
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearFeatureSupport: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFeatureSupport] = [
      .noneClearFeatureSupport,
    ]

  }

  enum clearFieldPresence: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearFieldPresence // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearFieldPresence
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearFieldPresence
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearFieldPresence: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFieldPresence] = [
      .noneClearFieldPresence,
    ]

  }

  enum clearFixedFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearFixedFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearFixedFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearFixedFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearFixedFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFixedFeatures] = [
      .noneClearFixedFeatures,
    ]

  }

  enum clearFullName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearFullName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearFullName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearFullName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearFullName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFullName] = [
      .noneClearFullName,
    ]

  }

  enum clearGoPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearGoPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearGoPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearGoPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearGoPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearGoPackage] = [
      .noneClearGoPackage,
    ]

  }

  enum clearIdempotencyLevel: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearIdempotencyLevel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearIdempotencyLevel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearIdempotencyLevel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearIdempotencyLevel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIdempotencyLevel] = [
      .noneClearIdempotencyLevel,
    ]

  }

  enum clearIdentifierValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearIdentifierValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearIdentifierValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearIdentifierValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearIdentifierValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIdentifierValue] = [
      .noneClearIdentifierValue,
    ]

  }

  enum clearInputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearInputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearInputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearInputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearInputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearInputType] = [
      .noneClearInputType,
    ]

  }

  enum clearIsExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearIsExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearIsExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearIsExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearIsExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIsExtension] = [
      .noneClearIsExtension,
    ]

  }

  enum clearJavaGenerateEqualsAndHash: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaGenerateEqualsAndHash // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaGenerateEqualsAndHash
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaGenerateEqualsAndHash
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaGenerateEqualsAndHash: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaGenerateEqualsAndHash] = [
      .noneClearJavaGenerateEqualsAndHash,
    ]

  }

  enum clearJavaGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaGenericServices] = [
      .noneClearJavaGenericServices,
    ]

  }

  enum clearJavaMultipleFiles: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaMultipleFiles // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaMultipleFiles
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaMultipleFiles
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaMultipleFiles: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaMultipleFiles] = [
      .noneClearJavaMultipleFiles,
    ]

  }

  enum clearJavaOuterClassname: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaOuterClassname // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaOuterClassname
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaOuterClassname
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaOuterClassname: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaOuterClassname] = [
      .noneClearJavaOuterClassname,
    ]

  }

  enum clearJavaPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaPackage] = [
      .noneClearJavaPackage,
    ]

  }

  enum clearJavaStringCheckUtf8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJavaStringCheckUtf8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJavaStringCheckUtf8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJavaStringCheckUtf8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJavaStringCheckUtf8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaStringCheckUtf8] = [
      .noneClearJavaStringCheckUtf8,
    ]

  }

  enum clearJsonFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJsonFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJsonFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJsonFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJsonFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJsonFormat] = [
      .noneClearJsonFormat,
    ]

  }

  enum clearJsonName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJsonName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJsonName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJsonName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJsonName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJsonName] = [
      .noneClearJsonName,
    ]

  }

  enum clearJstype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearJstype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearJstype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearJstype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearJstype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJstype] = [
      .noneClearJstype,
    ]

  }

  enum clearLabel: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearLabel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearLabel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearLabel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearLabel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLabel] = [
      .noneClearLabel,
    ]

  }

  enum clearLazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLazy] = [
      .noneClearLazy,
    ]

  }

  enum clearLeadingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearLeadingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearLeadingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearLeadingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearLeadingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLeadingComments] = [
      .noneClearLeadingComments,
    ]

  }

  enum clearMapEntry: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearMapEntry // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearMapEntry
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearMapEntry
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearMapEntry: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMapEntry] = [
      .noneClearMapEntry,
    ]

  }

  enum clearMaximumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearMaximumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearMaximumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearMaximumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearMaximumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMaximumEdition] = [
      .noneClearMaximumEdition,
    ]

  }

  enum clearMessageEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearMessageEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearMessageEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearMessageEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearMessageEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMessageEncoding] = [
      .noneClearMessageEncoding,
    ]

  }

  enum clearMessageSetWireFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearMessageSetWireFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearMessageSetWireFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearMessageSetWireFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearMessageSetWireFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMessageSetWireFormat] = [
      .noneClearMessageSetWireFormat,
    ]

  }

  enum clearMinimumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearMinimumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearMinimumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearMinimumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearMinimumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMinimumEdition] = [
      .noneClearMinimumEdition,
    ]

  }

  enum clearName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearName] = [
      .noneClearName,
    ]

  }

  enum clearNamePart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearNamePart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearNamePart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearNamePart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearNamePart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNamePart] = [
      .noneClearNamePart,
    ]

  }

  enum clearNegativeIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearNegativeIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearNegativeIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearNegativeIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearNegativeIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNegativeIntValue] = [
      .noneClearNegativeIntValue,
    ]

  }

  enum clearNoStandardDescriptorAccessor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearNoStandardDescriptorAccessor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearNoStandardDescriptorAccessor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearNoStandardDescriptorAccessor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearNoStandardDescriptorAccessor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNoStandardDescriptorAccessor] = [
      .noneClearNoStandardDescriptorAccessor,
    ]

  }

  enum clearNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNumber] = [
      .noneClearNumber,
    ]

  }

  enum clearObjcClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearObjcClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearObjcClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearObjcClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearObjcClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearObjcClassPrefix] = [
      .noneClearObjcClassPrefix,
    ]

  }

  enum clearOneofIndex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearOneofIndex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearOneofIndex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearOneofIndex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearOneofIndex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOneofIndex] = [
      .noneClearOneofIndex,
    ]

  }

  enum clearOptimizeFor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearOptimizeFor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearOptimizeFor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearOptimizeFor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearOptimizeFor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOptimizeFor] = [
      .noneClearOptimizeFor,
    ]

  }

  enum clearOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOptions] = [
      .noneClearOptions,
    ]

  }

  enum clearOutputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearOutputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearOutputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearOutputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearOutputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOutputType] = [
      .noneClearOutputType,
    ]

  }

  enum clearOverridableFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearOverridableFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearOverridableFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearOverridableFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearOverridableFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOverridableFeatures] = [
      .noneClearOverridableFeatures,
    ]

  }

  enum clearPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPackage] = [
      .noneClearPackage,
    ]

  }

  enum clearPacked: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPacked // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPacked
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPacked
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPacked: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPacked] = [
      .noneClearPacked,
    ]

  }

  enum clearPhpClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPhpClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPhpClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPhpClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPhpClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpClassPrefix] = [
      .noneClearPhpClassPrefix,
    ]

  }

  enum clearPhpMetadataNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPhpMetadataNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPhpMetadataNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPhpMetadataNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPhpMetadataNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpMetadataNamespace] = [
      .noneClearPhpMetadataNamespace,
    ]

  }

  enum clearPhpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPhpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPhpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPhpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPhpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpNamespace] = [
      .noneClearPhpNamespace,
    ]

  }

  enum clearPositiveIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPositiveIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPositiveIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPositiveIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPositiveIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPositiveIntValue] = [
      .noneClearPositiveIntValue,
    ]

  }

  enum clearProto3Optional: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearProto3Optional // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearProto3Optional
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearProto3Optional
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearProto3Optional: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearProto3Optional] = [
      .noneClearProto3Optional,
    ]

  }

  enum clearPyGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearPyGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearPyGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearPyGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearPyGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPyGenericServices] = [
      .noneClearPyGenericServices,
    ]

  }

  enum clearRepeated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearRepeated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearRepeated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearRepeated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearRepeated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRepeated] = [
      .noneClearRepeated,
    ]

  }

  enum clearRepeatedFieldEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearRepeatedFieldEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearRepeatedFieldEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearRepeatedFieldEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearRepeatedFieldEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRepeatedFieldEncoding] = [
      .noneClearRepeatedFieldEncoding,
    ]

  }

  enum clearReserved: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearReserved // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearReserved
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearReserved
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearReserved: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearReserved] = [
      .noneClearReserved,
    ]

  }

  enum clearRetention: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearRetention // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearRetention
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearRetention
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearRetention: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRetention] = [
      .noneClearRetention,
    ]

  }

  enum clearRubyPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearRubyPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearRubyPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearRubyPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearRubyPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRubyPackage] = [
      .noneClearRubyPackage,
    ]

  }

  enum clearSemantic: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSemantic // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSemantic
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSemantic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSemantic: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSemantic] = [
      .noneClearSemantic,
    ]

  }

  enum clearServerStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearServerStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearServerStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearServerStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearServerStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearServerStreaming] = [
      .noneClearServerStreaming,
    ]

  }

  enum clearSourceCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSourceCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSourceCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSourceCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSourceCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceCodeInfo] = [
      .noneClearSourceCodeInfo,
    ]

  }

  enum clearSourceContext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSourceContext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSourceContext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSourceContext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSourceContext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceContext] = [
      .noneClearSourceContext,
    ]

  }

  enum clearSourceFile: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSourceFile // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSourceFile
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSourceFile
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSourceFile: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceFile] = [
      .noneClearSourceFile,
    ]

  }

  enum clearStart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearStart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearStart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearStart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearStart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearStart] = [
      .noneClearStart,
    ]

  }

  enum clearStringValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearStringValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearStringValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearStringValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearStringValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearStringValue] = [
      .noneClearStringValue,
    ]

  }

  enum clearSwiftPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSwiftPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSwiftPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSwiftPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSwiftPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSwiftPrefix] = [
      .noneClearSwiftPrefix,
    ]

  }

  enum clearSyntax: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearSyntax // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearSyntax
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearSyntax
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearSyntax: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSyntax] = [
      .noneClearSyntax,
    ]

  }

  enum clearTrailingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearTrailingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearTrailingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearTrailingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearTrailingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearTrailingComments] = [
      .noneClearTrailingComments,
    ]

  }

  enum clearType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearType] = [
      .noneClearType,
    ]

  }

  enum clearTypeName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearTypeName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearTypeName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearTypeName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearTypeName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearTypeName] = [
      .noneClearTypeName,
    ]

  }

  enum clearUnverifiedLazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearUnverifiedLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearUnverifiedLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearUnverifiedLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearUnverifiedLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearUnverifiedLazy] = [
      .noneClearUnverifiedLazy,
    ]

  }

  enum clearUtf8Validation: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearUtf8Validation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearUtf8Validation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearUtf8Validation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearUtf8Validation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearUtf8Validation] = [
      .noneClearUtf8Validation,
    ]

  }

  enum clearValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearValue] = [
      .noneClearValue,
    ]

  }

  enum clearVerification: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearVerification // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearVerification
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearVerification
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearVerification: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearVerification] = [
      .noneClearVerification,
    ]

  }

  enum clearWeak: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClearWeak // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClearWeak
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClearWeak
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClearWeak: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearWeak] = [
      .noneClearWeak,
    ]

  }

  enum clientStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneClientStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneClientStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneClientStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneClientStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clientStreaming] = [
      .noneClientStreaming,
    ]

  }

  enum code: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCode // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCode
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCode
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCode: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.code] = [
      .noneCode,
    ]

  }

  enum codePoint: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCodePoint // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCodePoint
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCodePoint
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCodePoint: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.codePoint] = [
      .noneCodePoint,
    ]

  }

  enum codeUnits: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCodeUnits // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCodeUnits
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCodeUnits
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCodeUnits: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.codeUnits] = [
      .noneCodeUnits,
    ]

  }

  enum Collection: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCollection // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCollection
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCollection
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCollection: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Collection] = [
      .noneCollection,
    ]

  }

  enum com: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCom // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCom
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCom
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCom: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.com] = [
      .noneCom,
    ]

  }

  enum comma: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneComma // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneComma
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneComma
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneComma: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.comma] = [
      .noneComma,
    ]

  }

  enum consumedBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneConsumedBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneConsumedBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneConsumedBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneConsumedBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.consumedBytes] = [
      .noneConsumedBytes,
    ]

  }

  enum contains: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneContains // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneContains
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneContains
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneContains: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.contains] = [
      .noneContains,
    ]

  }

  enum contentsOf: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneContentsOf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneContentsOf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneContentsOf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneContentsOf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.contentsOf] = [
      .noneContentsOf,
    ]

  }

  enum ContiguousBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneContiguousBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneContiguousBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneContiguousBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneContiguousBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ContiguousBytes] = [
      .noneContiguousBytes,
    ]

  }

  enum copy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCopy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCopy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCopy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCopy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.copy] = [
      .noneCopy,
    ]

  }

  enum count: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCount // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCount
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCount
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCount: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.count] = [
      .noneCount,
    ]

  }

  enum countVarintsInBuffer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCountVarintsInBuffer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCountVarintsInBuffer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCountVarintsInBuffer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCountVarintsInBuffer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.countVarintsInBuffer] = [
      .noneCountVarintsInBuffer,
    ]

  }

  enum csharpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCsharpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCsharpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCsharpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCsharpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.csharpNamespace] = [
      .noneCsharpNamespace,
    ]

  }

  enum ctype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCtype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCtype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCtype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCtype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ctype] = [
      .noneCtype,
    ]

  }

  enum customCodable: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCustomCodable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCustomCodable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCustomCodable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCustomCodable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.customCodable] = [
      .noneCustomCodable,
    ]

  }

  enum CustomDebugStringConvertible: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCustomDebugStringConvertible // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCustomDebugStringConvertible
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCustomDebugStringConvertible
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCustomDebugStringConvertible: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CustomDebugStringConvertible] = [
      .noneCustomDebugStringConvertible,
    ]

  }

  enum CustomStringConvertible: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneCustomStringConvertible // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneCustomStringConvertible
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneCustomStringConvertible
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneCustomStringConvertible: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CustomStringConvertible] = [
      .noneCustomStringConvertible,
    ]

  }

  enum d: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneD // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneD
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneD
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneD: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.d] = [
      .noneD,
    ]

  }

  enum DataEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneData // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneData
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneData
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneData: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DataEnum] = [
      .noneData,
    ]

  }

  enum dataResult: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDataResult // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDataResult
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDataResult
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDataResult: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dataResult] = [
      .noneDataResult,
    ]

  }

  enum date: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDate // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDate
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDate
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDate: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.date] = [
      .noneDate,
    ]

  }

  enum daySec: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDaySec // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDaySec
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDaySec
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDaySec: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.daySec] = [
      .noneDaySec,
    ]

  }

  enum daysSinceEpoch: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDaysSinceEpoch // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDaysSinceEpoch
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDaysSinceEpoch
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDaysSinceEpoch: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.daysSinceEpoch] = [
      .noneDaysSinceEpoch,
    ]

  }

  enum debugDescriptionEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDebugDescription // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDebugDescription
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDebugDescription
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDebugDescription: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.debugDescriptionEnum] = [
      .noneDebugDescription,
    ]

  }

  enum debugRedact: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDebugRedact // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDebugRedact
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDebugRedact
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDebugRedact: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.debugRedact] = [
      .noneDebugRedact,
    ]

  }

  enum declaration: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDeclaration // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDeclaration
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDeclaration
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDeclaration: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.declaration] = [
      .noneDeclaration,
    ]

  }

  enum decoded: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecoded // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecoded
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecoded
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecoded: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decoded] = [
      .noneDecoded,
    ]

  }

  enum decodedFromJSONNull: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodedFromJsonnull // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodedFromJsonnull
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodedFromJsonnull
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodedFromJsonnull: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodedFromJSONNull] = [
      .noneDecodedFromJsonnull,
    ]

  }

  enum decodeExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeExtensionField] = [
      .noneDecodeExtensionField,
    ]

  }

  enum decodeExtensionFieldsAsMessageSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeExtensionFieldsAsMessageSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeExtensionFieldsAsMessageSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeExtensionFieldsAsMessageSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeExtensionFieldsAsMessageSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeExtensionFieldsAsMessageSet] = [
      .noneDecodeExtensionFieldsAsMessageSet,
    ]

  }

  enum decodeJSON: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeJson // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeJson
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeJson
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeJson: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeJSON] = [
      .noneDecodeJson,
    ]

  }

  enum decodeMapField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeMapField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeMapField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeMapField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeMapField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeMapField] = [
      .noneDecodeMapField,
    ]

  }

  enum decodeMessageEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeMessage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeMessage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeMessage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeMessage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeMessageEnum] = [
      .noneDecodeMessage,
    ]

  }

  enum decoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decoder] = [
      .noneDecoder,
    ]

  }

  enum decodeRepeated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeated] = [
      .noneDecodeRepeated,
    ]

  }

  enum decodeRepeatedBoolField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedBoolField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedBoolField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedBoolField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedBoolField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedBoolField] = [
      .noneDecodeRepeatedBoolField,
    ]

  }

  enum decodeRepeatedBytesField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedBytesField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedBytesField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedBytesField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedBytesField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedBytesField] = [
      .noneDecodeRepeatedBytesField,
    ]

  }

  enum decodeRepeatedDoubleField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedDoubleField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedDoubleField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedDoubleField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedDoubleField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedDoubleField] = [
      .noneDecodeRepeatedDoubleField,
    ]

  }

  enum decodeRepeatedEnumField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedEnumField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedEnumField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedEnumField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedEnumField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedEnumField] = [
      .noneDecodeRepeatedEnumField,
    ]

  }

  enum decodeRepeatedFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedFixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedFixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedFixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedFixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFixed32Field] = [
      .noneDecodeRepeatedFixed32Field,
    ]

  }

  enum decodeRepeatedFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedFixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedFixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedFixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedFixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFixed64Field] = [
      .noneDecodeRepeatedFixed64Field,
    ]

  }

  enum decodeRepeatedFloatField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedFloatField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedFloatField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedFloatField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedFloatField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFloatField] = [
      .noneDecodeRepeatedFloatField,
    ]

  }

  enum decodeRepeatedGroupField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedGroupField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedGroupField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedGroupField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedGroupField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedGroupField] = [
      .noneDecodeRepeatedGroupField,
    ]

  }

  enum decodeRepeatedInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedInt32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedInt32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedInt32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedInt32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedInt32Field] = [
      .noneDecodeRepeatedInt32Field,
    ]

  }

  enum decodeRepeatedInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedInt64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedInt64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedInt64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedInt64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedInt64Field] = [
      .noneDecodeRepeatedInt64Field,
    ]

  }

  enum decodeRepeatedMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedMessageField] = [
      .noneDecodeRepeatedMessageField,
    ]

  }

  enum decodeRepeatedSFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedSfixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedSfixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedSfixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedSfixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSFixed32Field] = [
      .noneDecodeRepeatedSfixed32Field,
    ]

  }

  enum decodeRepeatedSFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedSfixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedSfixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedSfixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedSfixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSFixed64Field] = [
      .noneDecodeRepeatedSfixed64Field,
    ]

  }

  enum decodeRepeatedSInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedSint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedSint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedSint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedSint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSInt32Field] = [
      .noneDecodeRepeatedSint32Field,
    ]

  }

  enum decodeRepeatedSInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedSint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedSint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedSint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedSint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSInt64Field] = [
      .noneDecodeRepeatedSint64Field,
    ]

  }

  enum decodeRepeatedStringField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedStringField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedStringField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedStringField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedStringField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedStringField] = [
      .noneDecodeRepeatedStringField,
    ]

  }

  enum decodeRepeatedUInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedUint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedUint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedUint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedUint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedUInt32Field] = [
      .noneDecodeRepeatedUint32Field,
    ]

  }

  enum decodeRepeatedUInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeRepeatedUint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeRepeatedUint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeRepeatedUint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeRepeatedUint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedUInt64Field] = [
      .noneDecodeRepeatedUint64Field,
    ]

  }

  enum decodeSingular: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingular // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingular
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingular
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingular: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingular] = [
      .noneDecodeSingular,
    ]

  }

  enum decodeSingularBoolField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularBoolField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularBoolField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularBoolField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularBoolField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularBoolField] = [
      .noneDecodeSingularBoolField,
    ]

  }

  enum decodeSingularBytesField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularBytesField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularBytesField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularBytesField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularBytesField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularBytesField] = [
      .noneDecodeSingularBytesField,
    ]

  }

  enum decodeSingularDoubleField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularDoubleField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularDoubleField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularDoubleField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularDoubleField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularDoubleField] = [
      .noneDecodeSingularDoubleField,
    ]

  }

  enum decodeSingularEnumField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularEnumField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularEnumField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularEnumField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularEnumField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularEnumField] = [
      .noneDecodeSingularEnumField,
    ]

  }

  enum decodeSingularFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularFixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularFixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularFixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularFixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFixed32Field] = [
      .noneDecodeSingularFixed32Field,
    ]

  }

  enum decodeSingularFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularFixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularFixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularFixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularFixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFixed64Field] = [
      .noneDecodeSingularFixed64Field,
    ]

  }

  enum decodeSingularFloatField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularFloatField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularFloatField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularFloatField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularFloatField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFloatField] = [
      .noneDecodeSingularFloatField,
    ]

  }

  enum decodeSingularGroupField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularGroupField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularGroupField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularGroupField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularGroupField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularGroupField] = [
      .noneDecodeSingularGroupField,
    ]

  }

  enum decodeSingularInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularInt32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularInt32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularInt32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularInt32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularInt32Field] = [
      .noneDecodeSingularInt32Field,
    ]

  }

  enum decodeSingularInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularInt64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularInt64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularInt64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularInt64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularInt64Field] = [
      .noneDecodeSingularInt64Field,
    ]

  }

  enum decodeSingularMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularMessageField] = [
      .noneDecodeSingularMessageField,
    ]

  }

  enum decodeSingularSFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularSfixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularSfixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularSfixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularSfixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSFixed32Field] = [
      .noneDecodeSingularSfixed32Field,
    ]

  }

  enum decodeSingularSFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularSfixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularSfixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularSfixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularSfixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSFixed64Field] = [
      .noneDecodeSingularSfixed64Field,
    ]

  }

  enum decodeSingularSInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularSint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularSint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularSint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularSint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSInt32Field] = [
      .noneDecodeSingularSint32Field,
    ]

  }

  enum decodeSingularSInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularSint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularSint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularSint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularSint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSInt64Field] = [
      .noneDecodeSingularSint64Field,
    ]

  }

  enum decodeSingularStringField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularStringField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularStringField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularStringField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularStringField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularStringField] = [
      .noneDecodeSingularStringField,
    ]

  }

  enum decodeSingularUInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularUint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularUint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularUint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularUint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularUInt32Field] = [
      .noneDecodeSingularUint32Field,
    ]

  }

  enum decodeSingularUInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeSingularUint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeSingularUint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeSingularUint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeSingularUint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularUInt64Field] = [
      .noneDecodeSingularUint64Field,
    ]

  }

  enum decodeTextFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDecodeTextFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDecodeTextFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDecodeTextFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDecodeTextFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeTextFormat] = [
      .noneDecodeTextFormat,
    ]

  }

  enum defaultAnyTypeURLPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDefaultAnyTypeUrlprefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDefaultAnyTypeUrlprefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDefaultAnyTypeUrlprefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDefaultAnyTypeUrlprefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaultAnyTypeURLPrefix] = [
      .noneDefaultAnyTypeUrlprefix,
    ]

  }

  enum defaults: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDefaults // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDefaults
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDefaults
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDefaults: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaults] = [
      .noneDefaults,
    ]

  }

  enum defaultValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDefaultValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDefaultValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDefaultValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDefaultValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaultValue] = [
      .noneDefaultValue,
    ]

  }

  enum dependency: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDependency // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDependency
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDependency
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDependency: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dependency] = [
      .noneDependency,
    ]

  }

  enum deprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecated] = [
      .noneDeprecated,
    ]

  }

  enum deprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDeprecatedLegacyJsonFieldConflicts // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDeprecatedLegacyJsonFieldConflicts
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDeprecatedLegacyJsonFieldConflicts
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDeprecatedLegacyJsonFieldConflicts: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecatedLegacyJsonFieldConflicts] = [
      .noneDeprecatedLegacyJsonFieldConflicts,
    ]

  }

  enum deprecationWarning: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDeprecationWarning // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDeprecationWarning
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDeprecationWarning
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDeprecationWarning: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecationWarning] = [
      .noneDeprecationWarning,
    ]

  }

  enum descriptionEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDescription // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDescription
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDescription
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDescription: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.descriptionEnum] = [
      .noneDescription,
    ]

  }

  enum DescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DescriptorProto] = [
      .noneDescriptorProto,
    ]

  }

  enum Dictionary: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDictionary // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDictionary
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDictionary
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDictionary: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Dictionary] = [
      .noneDictionary,
    ]

  }

  enum dictionaryLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDictionaryLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDictionaryLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDictionaryLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDictionaryLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dictionaryLiteral] = [
      .noneDictionaryLiteral,
    ]

  }

  enum digit: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigit // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigit
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigit: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit] = [
      .noneDigit,
    ]

  }

  enum digit0: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigit0 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigit0
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigit0
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigit0: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit0] = [
      .noneDigit0,
    ]

  }

  enum digit1: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigit1 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigit1
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigit1
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigit1: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit1] = [
      .noneDigit1,
    ]

  }

  enum digitCount: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigitCount // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigitCount
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigitCount
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigitCount: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digitCount] = [
      .noneDigitCount,
    ]

  }

  enum digits: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigits // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigits
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigits
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigits: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digits] = [
      .noneDigits,
    ]

  }

  enum digitValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDigitValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDigitValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDigitValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDigitValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digitValue] = [
      .noneDigitValue,
    ]

  }

  enum discardableResult: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDiscardableResult // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDiscardableResult
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDiscardableResult
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDiscardableResult: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.discardableResult] = [
      .noneDiscardableResult,
    ]

  }

  enum discardUnknownFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDiscardUnknownFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDiscardUnknownFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDiscardUnknownFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDiscardUnknownFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.discardUnknownFields] = [
      .noneDiscardUnknownFields,
    ]

  }

  enum DoubleEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDouble // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDouble
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDouble
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDouble: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DoubleEnum] = [
      .noneDouble,
    ]

  }

  enum doubleValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDoubleValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDoubleValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDoubleValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDoubleValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.doubleValue] = [
      .noneDoubleValue,
    ]

  }

  enum Duration: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneDuration // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneDuration
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneDuration
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneDuration: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Duration] = [
      .noneDuration,
    ]

  }

  enum E: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneE // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneE
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneE
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneE: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.E] = [
      .noneE,
    ]

  }

  enum edition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.edition] = [
      .noneEdition,
    ]

  }

  enum EditionDefault: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEditionDefault // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEditionDefault
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEditionDefault
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEditionDefault: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EditionDefault] = [
      .noneEditionDefault,
    ]

  }

  enum editionDefaults: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEditionDefaults // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEditionDefaults
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEditionDefaults
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEditionDefaults: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionDefaults] = [
      .noneEditionDefaults,
    ]

  }

  enum editionDeprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEditionDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEditionDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEditionDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEditionDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionDeprecated] = [
      .noneEditionDeprecated,
    ]

  }

  enum editionIntroduced: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEditionIntroduced // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEditionIntroduced
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEditionIntroduced
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEditionIntroduced: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionIntroduced] = [
      .noneEditionIntroduced,
    ]

  }

  enum editionRemoved: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEditionRemoved // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEditionRemoved
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEditionRemoved
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEditionRemoved: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionRemoved] = [
      .noneEditionRemoved,
    ]

  }

  enum Element: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneElement // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneElement
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneElement
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneElement: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Element] = [
      .noneElement,
    ]

  }

  enum elements: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneElements // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneElements
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneElements
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneElements: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.elements] = [
      .noneElements,
    ]

  }

  enum elseEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneElse // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneElse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneElse
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneElse: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.elseEnum] = [
      .noneElse,
    ]

  }

  enum emitExtensionFieldName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEmitExtensionFieldName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEmitExtensionFieldName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEmitExtensionFieldName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEmitExtensionFieldName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitExtensionFieldName] = [
      .noneEmitExtensionFieldName,
    ]

  }

  enum emitFieldName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEmitFieldName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEmitFieldName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEmitFieldName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEmitFieldName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitFieldName] = [
      .noneEmitFieldName,
    ]

  }

  enum emitFieldNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEmitFieldNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEmitFieldNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEmitFieldNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEmitFieldNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitFieldNumber] = [
      .noneEmitFieldNumber,
    ]

  }

  enum Empty: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEmpty // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEmpty
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEmpty
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEmpty: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Empty] = [
      .noneEmpty,
    ]

  }

  enum emptyData: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEmptyData // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEmptyData
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEmptyData
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEmptyData: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emptyData] = [
      .noneEmptyData,
    ]

  }

  enum encodeAsBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncodeAsBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncodeAsBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncodeAsBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncodeAsBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodeAsBytes] = [
      .noneEncodeAsBytes,
    ]

  }

  enum encoded: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncoded // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncoded
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncoded
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncoded: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encoded] = [
      .noneEncoded,
    ]

  }

  enum encodedJSONString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncodedJsonstring // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncodedJsonstring
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncodedJsonstring
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncodedJsonstring: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodedJSONString] = [
      .noneEncodedJsonstring,
    ]

  }

  enum encodedSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncodedSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncodedSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncodedSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncodedSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodedSize] = [
      .noneEncodedSize,
    ]

  }

  enum encodeField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncodeField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncodeField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncodeField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncodeField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodeField] = [
      .noneEncodeField,
    ]

  }

  enum encoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEncoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEncoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEncoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEncoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encoder] = [
      .noneEncoder,
    ]

  }

  enum end: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnd // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnd
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnd
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnd: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.end] = [
      .noneEnd,
    ]

  }

  enum endArray: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEndArray // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEndArray
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEndArray
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEndArray: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endArray] = [
      .noneEndArray,
    ]

  }

  enum endMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEndMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEndMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEndMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEndMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endMessageField] = [
      .noneEndMessageField,
    ]

  }

  enum endObject: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEndObject // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEndObject
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEndObject
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEndObject: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endObject] = [
      .noneEndObject,
    ]

  }

  enum endRegularField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEndRegularField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEndRegularField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEndRegularField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEndRegularField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endRegularField] = [
      .noneEndRegularField,
    ]

  }

  enum enumEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnum // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnum
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnum
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnum: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumEnum] = [
      .noneEnum,
    ]

  }

  enum EnumDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumDescriptorProto] = [
      .noneEnumDescriptorProto,
    ]

  }

  enum EnumOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumOptions] = [
      .noneEnumOptions,
    ]

  }

  enum EnumReservedRange: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumReservedRange // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumReservedRange
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumReservedRange
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumReservedRange: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumReservedRange] = [
      .noneEnumReservedRange,
    ]

  }

  enum enumType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumType] = [
      .noneEnumType,
    ]

  }

  enum enumvalue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumvalue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumvalue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumvalue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumvalue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumvalue] = [
      .noneEnumvalue,
    ]

  }

  enum EnumValueDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumValueDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumValueDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumValueDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumValueDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumValueDescriptorProto] = [
      .noneEnumValueDescriptorProto,
    ]

  }

  enum EnumValueOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEnumValueOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEnumValueOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEnumValueOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEnumValueOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumValueOptions] = [
      .noneEnumValueOptions,
    ]

  }

  enum EquatableEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneEquatable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneEquatable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneEquatable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneEquatable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EquatableEnum] = [
      .noneEquatable,
    ]

  }

  enum Error: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Error] = [
      .noneError,
    ]

  }

  enum ExpressibleByArrayLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExpressibleByArrayLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExpressibleByArrayLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExpressibleByArrayLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExpressibleByArrayLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExpressibleByArrayLiteral] = [
      .noneExpressibleByArrayLiteral,
    ]

  }

  enum ExpressibleByDictionaryLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExpressibleByDictionaryLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExpressibleByDictionaryLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExpressibleByDictionaryLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExpressibleByDictionaryLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExpressibleByDictionaryLiteral] = [
      .noneExpressibleByDictionaryLiteral,
    ]

  }

  enum ext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ext] = [
      .noneExt,
    ]

  }

  enum extDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extDecoder] = [
      .noneExtDecoder,
    ]

  }

  enum extendedGraphemeClusterLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtendedGraphemeClusterLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtendedGraphemeClusterLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtendedGraphemeClusterLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtendedGraphemeClusterLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extendedGraphemeClusterLiteral] = [
      .noneExtendedGraphemeClusterLiteral,
    ]

  }

  enum ExtendedGraphemeClusterLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtendedGraphemeClusterLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtendedGraphemeClusterLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtendedGraphemeClusterLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtendedGraphemeClusterLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtendedGraphemeClusterLiteralType] = [
      .noneExtendedGraphemeClusterLiteralType,
    ]

  }

  enum extendee: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtendee // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtendee
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtendee
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtendee: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extendee] = [
      .noneExtendee,
    ]

  }

  enum ExtensibleMessage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensibleMessage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensibleMessage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensibleMessage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensibleMessage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensibleMessage] = [
      .noneExtensibleMessage,
    ]

  }

  enum extensionEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionEnum] = [
      .noneExtension,
    ]

  }

  enum ExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionField] = [
      .noneExtensionField,
    ]

  }

  enum extensionFieldNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionFieldNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionFieldNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionFieldNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionFieldNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionFieldNumber] = [
      .noneExtensionFieldNumber,
    ]

  }

  enum ExtensionFieldValueSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionFieldValueSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionFieldValueSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionFieldValueSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionFieldValueSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionFieldValueSet] = [
      .noneExtensionFieldValueSet,
    ]

  }

  enum ExtensionMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionMap] = [
      .noneExtensionMap,
    ]

  }

  enum extensionRange: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionRange // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionRange
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionRange
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionRange: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionRange] = [
      .noneExtensionRange,
    ]

  }

  enum ExtensionRangeOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensionRangeOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensionRangeOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensionRangeOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensionRangeOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionRangeOptions] = [
      .noneExtensionRangeOptions,
    ]

  }

  enum extensions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtensions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtensions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtensions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtensions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensions] = [
      .noneExtensions,
    ]

  }

  enum extras: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneExtras // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneExtras
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneExtras
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneExtras: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extras] = [
      .noneExtras,
    ]

  }

  enum F: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneF // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneF
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneF
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneF: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.F] = [
      .noneF,
    ]

  }

  enum falseEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFalse // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFalse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFalse
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFalse: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.falseEnum] = [
      .noneFalse,
    ]

  }

  enum features: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.features] = [
      .noneFeatures,
    ]

  }

  enum FeatureSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFeatureSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFeatureSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFeatureSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFeatureSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSet] = [
      .noneFeatureSet,
    ]

  }

  enum FeatureSetDefaults: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFeatureSetDefaults // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFeatureSetDefaults
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFeatureSetDefaults
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFeatureSetDefaults: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSetDefaults] = [
      .noneFeatureSetDefaults,
    ]

  }

  enum FeatureSetEditionDefault: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFeatureSetEditionDefault // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFeatureSetEditionDefault
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFeatureSetEditionDefault
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFeatureSetEditionDefault: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSetEditionDefault] = [
      .noneFeatureSetEditionDefault,
    ]

  }

  enum featureSupport: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFeatureSupport // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFeatureSupport
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFeatureSupport
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFeatureSupport: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.featureSupport] = [
      .noneFeatureSupport,
    ]

  }

  enum field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.field] = [
      .noneField,
    ]

  }

  enum fieldData: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldData // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldData
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldData
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldData: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldData] = [
      .noneFieldData,
    ]

  }

  enum FieldDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldDescriptorProto] = [
      .noneFieldDescriptorProto,
    ]

  }

  enum FieldMask: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldMask // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldMask
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldMask
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldMask: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldMask] = [
      .noneFieldMask,
    ]

  }

  enum FieldMaskError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldMaskError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldMaskError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldMaskError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldMaskError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldMaskError] = [
      .noneFieldMaskError,
    ]

  }

  enum fieldName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldName] = [
      .noneFieldName,
    ]

  }

  enum fieldNameCount: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldNameCount // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldNameCount
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldNameCount
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldNameCount: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNameCount] = [
      .noneFieldNameCount,
    ]

  }

  enum fieldNum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldNum // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldNum
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldNum
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldNum: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNum] = [
      .noneFieldNum,
    ]

  }

  enum fieldNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNumber] = [
      .noneFieldNumber,
    ]

  }

  enum fieldNumberForProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldNumberForProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldNumberForProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldNumberForProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldNumberForProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNumberForProto] = [
      .noneFieldNumberForProto,
    ]

  }

  enum FieldOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldOptions] = [
      .noneFieldOptions,
    ]

  }

  enum fieldPresence: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldPresence // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldPresence
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldPresence
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldPresence: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldPresence] = [
      .noneFieldPresence,
    ]

  }

  enum fields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fields] = [
      .noneFields,
    ]

  }

  enum fieldSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldSize] = [
      .noneFieldSize,
    ]

  }

  enum FieldTag: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldTag // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldTag
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldTag
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldTag: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldTag] = [
      .noneFieldTag,
    ]

  }

  enum FieldType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFieldType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFieldType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFieldType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFieldType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldType] = [
      .noneFieldType,
    ]

  }

  enum file: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFile // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFile
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFile
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFile: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.file] = [
      .noneFile,
    ]

  }

  enum FileDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFileDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFileDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFileDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFileDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileDescriptorProto] = [
      .noneFileDescriptorProto,
    ]

  }

  enum FileDescriptorSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFileDescriptorSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFileDescriptorSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFileDescriptorSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFileDescriptorSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileDescriptorSet] = [
      .noneFileDescriptorSet,
    ]

  }

  enum fileName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFileName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFileName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFileName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFileName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fileName] = [
      .noneFileName,
    ]

  }

  enum FileOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFileOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFileOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFileOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFileOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileOptions] = [
      .noneFileOptions,
    ]

  }

  enum filter: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFilter // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFilter
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFilter
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFilter: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.filter] = [
      .noneFilter,
    ]

  }

  enum final: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFinal // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFinal
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFinal
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFinal: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.final] = [
      .noneFinal,
    ]

  }

  enum finiteOnly: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFiniteOnly // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFiniteOnly
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFiniteOnly
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFiniteOnly: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.finiteOnly] = [
      .noneFiniteOnly,
    ]

  }

  enum first: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFirst // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFirst
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFirst
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFirst: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.first] = [
      .noneFirst,
    ]

  }

  enum firstItem: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFirstItem // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFirstItem
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFirstItem
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFirstItem: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.firstItem] = [
      .noneFirstItem,
    ]

  }

  enum fixedFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFixedFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFixedFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFixedFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFixedFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fixedFeatures] = [
      .noneFixedFeatures,
    ]

  }

  enum FloatEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFloat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFloat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFloat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFloat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatEnum] = [
      .noneFloat,
    ]

  }

  enum floatLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFloatLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFloatLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFloatLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFloatLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.floatLiteral] = [
      .noneFloatLiteral,
    ]

  }

  enum FloatLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFloatLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFloatLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFloatLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFloatLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatLiteralType] = [
      .noneFloatLiteralType,
    ]

  }

  enum FloatValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFloatValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFloatValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFloatValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFloatValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatValue] = [
      .noneFloatValue,
    ]

  }

  enum forEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forEnum] = [
      .noneFor,
    ]

  }

  enum forMessageName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneForMessageName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneForMessageName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneForMessageName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneForMessageName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forMessageName] = [
      .noneForMessageName,
    ]

  }

  enum formUnion: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFormUnion // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFormUnion
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFormUnion
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFormUnion: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.formUnion] = [
      .noneFormUnion,
    ]

  }

  enum forReadingFrom: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneForReadingFrom // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneForReadingFrom
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneForReadingFrom
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneForReadingFrom: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forReadingFrom] = [
      .noneForReadingFrom,
    ]

  }

  enum forTypeURL: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneForTypeURL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneForTypeURL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneForTypeURL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneForTypeURL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forTypeURL] = [
      .noneForTypeURL,
    ]

  }

  enum ForwardParser: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneForwardParser // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneForwardParser
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneForwardParser
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneForwardParser: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ForwardParser] = [
      .noneForwardParser,
    ]

  }

  enum forWritingInto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneForWritingInto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneForWritingInto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneForWritingInto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneForWritingInto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forWritingInto] = [
      .noneForWritingInto,
    ]

  }

  enum from: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFrom // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFrom
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFrom
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFrom: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.from] = [
      .noneFrom,
    ]

  }

  enum fromAscii2: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFromAscii2 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFromAscii2
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFromAscii2
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFromAscii2: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromAscii2] = [
      .noneFromAscii2,
    ]

  }

  enum fromAscii4: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFromAscii4 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFromAscii4
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFromAscii4
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFromAscii4: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromAscii4] = [
      .noneFromAscii4,
    ]

  }

  enum fromByteOffset: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFromByteOffset // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFromByteOffset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFromByteOffset
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFromByteOffset: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromByteOffset] = [
      .noneFromByteOffset,
    ]

  }

  enum fromHexDigit: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFromHexDigit // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFromHexDigit
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFromHexDigit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFromHexDigit: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromHexDigit] = [
      .noneFromHexDigit,
    ]

  }

  enum fullName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFullName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFullName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFullName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFullName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fullName] = [
      .noneFullName,
    ]

  }

  enum funcEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFunc // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFunc
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFunc
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFunc: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.funcEnum] = [
      .noneFunc,
    ]

  }

  enum function: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneFunction // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneFunction
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneFunction
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneFunction: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.function] = [
      .noneFunction,
    ]

  }

  enum G: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneG // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneG
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneG
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneG: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.G] = [
      .noneG,
    ]

  }

  enum GeneratedCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGeneratedCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGeneratedCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGeneratedCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGeneratedCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.GeneratedCodeInfo] = [
      .noneGeneratedCodeInfo,
    ]

  }

  enum get: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.get] = [
      .noneGet,
    ]

  }

  enum getExtensionValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGetExtensionValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGetExtensionValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGetExtensionValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGetExtensionValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.getExtensionValue] = [
      .noneGetExtensionValue,
    ]

  }

  enum googleapis: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleapis // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleapis
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleapis
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleapis: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.googleapis] = [
      .noneGoogleapis,
    ]

  }

  enum Google_Protobuf_Any: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufAny // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufAny
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufAny
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufAny: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Any] = [
      .noneGoogleProtobufAny,
    ]

  }

  enum Google_Protobuf_Api: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufApi // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufApi
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufApi
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufApi: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Api] = [
      .noneGoogleProtobufApi,
    ]

  }

  enum Google_Protobuf_BoolValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufBoolValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufBoolValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufBoolValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufBoolValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_BoolValue] = [
      .noneGoogleProtobufBoolValue,
    ]

  }

  enum Google_Protobuf_BytesValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufBytesValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufBytesValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufBytesValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufBytesValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_BytesValue] = [
      .noneGoogleProtobufBytesValue,
    ]

  }

  enum Google_Protobuf_DescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_DescriptorProto] = [
      .noneGoogleProtobufDescriptorProto,
    ]

  }

  enum Google_Protobuf_DoubleValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufDoubleValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufDoubleValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufDoubleValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufDoubleValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_DoubleValue] = [
      .noneGoogleProtobufDoubleValue,
    ]

  }

  enum Google_Protobuf_Duration: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufDuration // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufDuration
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufDuration
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufDuration: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Duration] = [
      .noneGoogleProtobufDuration,
    ]

  }

  enum Google_Protobuf_Edition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Edition] = [
      .noneGoogleProtobufEdition,
    ]

  }

  enum Google_Protobuf_Empty: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEmpty // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEmpty
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEmpty
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEmpty: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Empty] = [
      .noneGoogleProtobufEmpty,
    ]

  }

  enum Google_Protobuf_Enum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnum // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnum
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnum
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnum: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Enum] = [
      .noneGoogleProtobufEnum,
    ]

  }

  enum Google_Protobuf_EnumDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnumDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnumDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnumDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnumDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumDescriptorProto] = [
      .noneGoogleProtobufEnumDescriptorProto,
    ]

  }

  enum Google_Protobuf_EnumOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnumOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnumOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnumOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnumOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumOptions] = [
      .noneGoogleProtobufEnumOptions,
    ]

  }

  enum Google_Protobuf_EnumValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnumValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnumValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnumValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnumValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValue] = [
      .noneGoogleProtobufEnumValue,
    ]

  }

  enum Google_Protobuf_EnumValueDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnumValueDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnumValueDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnumValueDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnumValueDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValueDescriptorProto] = [
      .noneGoogleProtobufEnumValueDescriptorProto,
    ]

  }

  enum Google_Protobuf_EnumValueOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufEnumValueOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufEnumValueOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufEnumValueOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufEnumValueOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValueOptions] = [
      .noneGoogleProtobufEnumValueOptions,
    ]

  }

  enum Google_Protobuf_ExtensionRangeOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufExtensionRangeOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufExtensionRangeOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufExtensionRangeOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufExtensionRangeOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ExtensionRangeOptions] = [
      .noneGoogleProtobufExtensionRangeOptions,
    ]

  }

  enum Google_Protobuf_FeatureSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFeatureSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFeatureSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFeatureSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFeatureSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FeatureSet] = [
      .noneGoogleProtobufFeatureSet,
    ]

  }

  enum Google_Protobuf_FeatureSetDefaults: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFeatureSetDefaults // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFeatureSetDefaults
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFeatureSetDefaults
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFeatureSetDefaults: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FeatureSetDefaults] = [
      .noneGoogleProtobufFeatureSetDefaults,
    ]

  }

  enum Google_Protobuf_Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Field] = [
      .noneGoogleProtobufField,
    ]

  }

  enum Google_Protobuf_FieldDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFieldDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFieldDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFieldDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFieldDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldDescriptorProto] = [
      .noneGoogleProtobufFieldDescriptorProto,
    ]

  }

  enum Google_Protobuf_FieldMask: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFieldMask // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFieldMask
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFieldMask
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFieldMask: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldMask] = [
      .noneGoogleProtobufFieldMask,
    ]

  }

  enum Google_Protobuf_FieldOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFieldOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFieldOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFieldOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFieldOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldOptions] = [
      .noneGoogleProtobufFieldOptions,
    ]

  }

  enum Google_Protobuf_FileDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFileDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFileDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFileDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFileDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileDescriptorProto] = [
      .noneGoogleProtobufFileDescriptorProto,
    ]

  }

  enum Google_Protobuf_FileDescriptorSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFileDescriptorSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFileDescriptorSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFileDescriptorSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFileDescriptorSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileDescriptorSet] = [
      .noneGoogleProtobufFileDescriptorSet,
    ]

  }

  enum Google_Protobuf_FileOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFileOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFileOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFileOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFileOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileOptions] = [
      .noneGoogleProtobufFileOptions,
    ]

  }

  enum Google_Protobuf_FloatValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufFloatValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufFloatValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufFloatValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufFloatValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FloatValue] = [
      .noneGoogleProtobufFloatValue,
    ]

  }

  enum Google_Protobuf_GeneratedCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufGeneratedCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufGeneratedCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufGeneratedCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufGeneratedCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_GeneratedCodeInfo] = [
      .noneGoogleProtobufGeneratedCodeInfo,
    ]

  }

  enum Google_Protobuf_Int32Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufInt32Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufInt32Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufInt32Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufInt32Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Int32Value] = [
      .noneGoogleProtobufInt32Value,
    ]

  }

  enum Google_Protobuf_Int64Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufInt64Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufInt64Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufInt64Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufInt64Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Int64Value] = [
      .noneGoogleProtobufInt64Value,
    ]

  }

  enum Google_Protobuf_ListValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufListValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufListValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufListValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufListValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ListValue] = [
      .noneGoogleProtobufListValue,
    ]

  }

  enum Google_Protobuf_MessageOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufMessageOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufMessageOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufMessageOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufMessageOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MessageOptions] = [
      .noneGoogleProtobufMessageOptions,
    ]

  }

  enum Google_Protobuf_Method: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufMethod // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufMethod
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufMethod
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufMethod: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Method] = [
      .noneGoogleProtobufMethod,
    ]

  }

  enum Google_Protobuf_MethodDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufMethodDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufMethodDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufMethodDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufMethodDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MethodDescriptorProto] = [
      .noneGoogleProtobufMethodDescriptorProto,
    ]

  }

  enum Google_Protobuf_MethodOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufMethodOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufMethodOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufMethodOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufMethodOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MethodOptions] = [
      .noneGoogleProtobufMethodOptions,
    ]

  }

  enum Google_Protobuf_Mixin: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufMixin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufMixin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufMixin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufMixin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Mixin] = [
      .noneGoogleProtobufMixin,
    ]

  }

  enum Google_Protobuf_NullValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufNullValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufNullValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufNullValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufNullValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_NullValue] = [
      .noneGoogleProtobufNullValue,
    ]

  }

  enum Google_Protobuf_OneofDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufOneofDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufOneofDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufOneofDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufOneofDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_OneofDescriptorProto] = [
      .noneGoogleProtobufOneofDescriptorProto,
    ]

  }

  enum Google_Protobuf_OneofOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufOneofOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufOneofOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufOneofOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufOneofOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_OneofOptions] = [
      .noneGoogleProtobufOneofOptions,
    ]

  }

  enum Google_Protobuf_Option: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufOption // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufOption
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufOption
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufOption: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Option] = [
      .noneGoogleProtobufOption,
    ]

  }

  enum Google_Protobuf_ServiceDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufServiceDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufServiceDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufServiceDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufServiceDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ServiceDescriptorProto] = [
      .noneGoogleProtobufServiceDescriptorProto,
    ]

  }

  enum Google_Protobuf_ServiceOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufServiceOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufServiceOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufServiceOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufServiceOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ServiceOptions] = [
      .noneGoogleProtobufServiceOptions,
    ]

  }

  enum Google_Protobuf_SourceCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufSourceCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufSourceCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufSourceCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufSourceCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_SourceCodeInfo] = [
      .noneGoogleProtobufSourceCodeInfo,
    ]

  }

  enum Google_Protobuf_SourceContext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufSourceContext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufSourceContext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufSourceContext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufSourceContext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_SourceContext] = [
      .noneGoogleProtobufSourceContext,
    ]

  }

  enum Google_Protobuf_StringValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufStringValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufStringValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufStringValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufStringValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_StringValue] = [
      .noneGoogleProtobufStringValue,
    ]

  }

  enum Google_Protobuf_Struct: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufStruct // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufStruct
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufStruct
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufStruct: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Struct] = [
      .noneGoogleProtobufStruct,
    ]

  }

  enum Google_Protobuf_Syntax: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufSyntax // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufSyntax
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufSyntax
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufSyntax: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Syntax] = [
      .noneGoogleProtobufSyntax,
    ]

  }

  enum Google_Protobuf_Timestamp: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufTimestamp // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufTimestamp
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufTimestamp
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufTimestamp: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Timestamp] = [
      .noneGoogleProtobufTimestamp,
    ]

  }

  enum Google_Protobuf_Type: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Type] = [
      .noneGoogleProtobufType,
    ]

  }

  enum Google_Protobuf_UInt32Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufUint32Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufUint32Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufUint32Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufUint32Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UInt32Value] = [
      .noneGoogleProtobufUint32Value,
    ]

  }

  enum Google_Protobuf_UInt64Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufUint64Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufUint64Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufUint64Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufUint64Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UInt64Value] = [
      .noneGoogleProtobufUint64Value,
    ]

  }

  enum Google_Protobuf_UninterpretedOption: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufUninterpretedOption // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufUninterpretedOption
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufUninterpretedOption
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufUninterpretedOption: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UninterpretedOption] = [
      .noneGoogleProtobufUninterpretedOption,
    ]

  }

  enum Google_Protobuf_Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoogleProtobufValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoogleProtobufValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoogleProtobufValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoogleProtobufValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Value] = [
      .noneGoogleProtobufValue,
    ]

  }

  enum goPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGoPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGoPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGoPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGoPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.goPackage] = [
      .noneGoPackage,
    ]

  }

  enum group: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGroup // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGroup
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGroup
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGroup: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.group] = [
      .noneGroup,
    ]

  }

  enum groupFieldNumberStack: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGroupFieldNumberStack // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGroupFieldNumberStack
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGroupFieldNumberStack
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGroupFieldNumberStack: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.groupFieldNumberStack] = [
      .noneGroupFieldNumberStack,
    ]

  }

  enum groupSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGroupSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGroupSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGroupSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGroupSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.groupSize] = [
      .noneGroupSize,
    ]

  }

  enum guardEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneGuard // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneGuard
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneGuard
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneGuard: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.guardEnum] = [
      .noneGuard,
    ]

  }

  enum hadOneofValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHadOneofValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHadOneofValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHadOneofValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHadOneofValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hadOneofValue] = [
      .noneHadOneofValue,
    ]

  }

  enum handleConflictingOneOf: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHandleConflictingOneOf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHandleConflictingOneOf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHandleConflictingOneOf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHandleConflictingOneOf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.handleConflictingOneOf] = [
      .noneHandleConflictingOneOf,
    ]

  }

  enum hasAggregateValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasAggregateValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasAggregateValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasAggregateValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasAggregateValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasAggregateValue] = [
      .noneHasAggregateValue,
    ]

  }

  enum hasAllowAlias: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasAllowAlias // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasAllowAlias
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasAllowAlias
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasAllowAlias: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasAllowAlias] = [
      .noneHasAllowAlias,
    ]

  }

  enum hasBegin: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasBegin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasBegin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasBegin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasBegin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasBegin] = [
      .noneHasBegin,
    ]

  }

  enum hasCcEnableArenas: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasCcEnableArenas // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasCcEnableArenas
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasCcEnableArenas
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasCcEnableArenas: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCcEnableArenas] = [
      .noneHasCcEnableArenas,
    ]

  }

  enum hasCcGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasCcGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasCcGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasCcGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasCcGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCcGenericServices] = [
      .noneHasCcGenericServices,
    ]

  }

  enum hasClientStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasClientStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasClientStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasClientStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasClientStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasClientStreaming] = [
      .noneHasClientStreaming,
    ]

  }

  enum hasCsharpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasCsharpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasCsharpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasCsharpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasCsharpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCsharpNamespace] = [
      .noneHasCsharpNamespace,
    ]

  }

  enum hasCtype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasCtype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasCtype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasCtype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasCtype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCtype] = [
      .noneHasCtype,
    ]

  }

  enum hasDebugRedact: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDebugRedact // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDebugRedact
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDebugRedact
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDebugRedact: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDebugRedact] = [
      .noneHasDebugRedact,
    ]

  }

  enum hasDefaultValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDefaultValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDefaultValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDefaultValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDefaultValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDefaultValue] = [
      .noneHasDefaultValue,
    ]

  }

  enum hasDeprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecated] = [
      .noneHasDeprecated,
    ]

  }

  enum hasDeprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDeprecatedLegacyJsonFieldConflicts // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDeprecatedLegacyJsonFieldConflicts
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDeprecatedLegacyJsonFieldConflicts
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDeprecatedLegacyJsonFieldConflicts: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecatedLegacyJsonFieldConflicts] = [
      .noneHasDeprecatedLegacyJsonFieldConflicts,
    ]

  }

  enum hasDeprecationWarning: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDeprecationWarning // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDeprecationWarning
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDeprecationWarning
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDeprecationWarning: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecationWarning] = [
      .noneHasDeprecationWarning,
    ]

  }

  enum hasDoubleValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasDoubleValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasDoubleValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasDoubleValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasDoubleValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDoubleValue] = [
      .noneHasDoubleValue,
    ]

  }

  enum hasEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEdition] = [
      .noneHasEdition,
    ]

  }

  enum hasEditionDeprecated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEditionDeprecated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEditionDeprecated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEditionDeprecated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEditionDeprecated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionDeprecated] = [
      .noneHasEditionDeprecated,
    ]

  }

  enum hasEditionIntroduced: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEditionIntroduced // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEditionIntroduced
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEditionIntroduced
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEditionIntroduced: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionIntroduced] = [
      .noneHasEditionIntroduced,
    ]

  }

  enum hasEditionRemoved: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEditionRemoved // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEditionRemoved
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEditionRemoved
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEditionRemoved: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionRemoved] = [
      .noneHasEditionRemoved,
    ]

  }

  enum hasEnd: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEnd // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEnd
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEnd
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEnd: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEnd] = [
      .noneHasEnd,
    ]

  }

  enum hasEnumType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasEnumType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasEnumType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasEnumType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasEnumType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEnumType] = [
      .noneHasEnumType,
    ]

  }

  enum hasExtendee: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasExtendee // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasExtendee
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasExtendee
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasExtendee: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasExtendee] = [
      .noneHasExtendee,
    ]

  }

  enum hasExtensionValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasExtensionValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasExtensionValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasExtensionValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasExtensionValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasExtensionValue] = [
      .noneHasExtensionValue,
    ]

  }

  enum hasFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFeatures] = [
      .noneHasFeatures,
    ]

  }

  enum hasFeatureSupport: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasFeatureSupport // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasFeatureSupport
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasFeatureSupport
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasFeatureSupport: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFeatureSupport] = [
      .noneHasFeatureSupport,
    ]

  }

  enum hasFieldPresence: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasFieldPresence // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasFieldPresence
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasFieldPresence
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasFieldPresence: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFieldPresence] = [
      .noneHasFieldPresence,
    ]

  }

  enum hasFixedFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasFixedFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasFixedFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasFixedFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasFixedFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFixedFeatures] = [
      .noneHasFixedFeatures,
    ]

  }

  enum hasFullName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasFullName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasFullName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasFullName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasFullName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFullName] = [
      .noneHasFullName,
    ]

  }

  enum hasGoPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasGoPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasGoPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasGoPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasGoPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasGoPackage] = [
      .noneHasGoPackage,
    ]

  }

  enum hash: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHash // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHash
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHash
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHash: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hash] = [
      .noneHash,
    ]

  }

  enum HashableEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHashable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHashable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHashable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHashable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.HashableEnum] = [
      .noneHashable,
    ]

  }

  enum hasher: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasher // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasher
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasher
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasher: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasher] = [
      .noneHasher,
    ]

  }

  enum HashVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHashVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHashVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHashVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHashVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.HashVisitor] = [
      .noneHashVisitor,
    ]

  }

  enum hasIdempotencyLevel: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasIdempotencyLevel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasIdempotencyLevel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasIdempotencyLevel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasIdempotencyLevel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIdempotencyLevel] = [
      .noneHasIdempotencyLevel,
    ]

  }

  enum hasIdentifierValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasIdentifierValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasIdentifierValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasIdentifierValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasIdentifierValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIdentifierValue] = [
      .noneHasIdentifierValue,
    ]

  }

  enum hasInputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasInputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasInputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasInputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasInputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasInputType] = [
      .noneHasInputType,
    ]

  }

  enum hasIsExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasIsExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasIsExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasIsExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasIsExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIsExtension] = [
      .noneHasIsExtension,
    ]

  }

  enum hasJavaGenerateEqualsAndHash: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaGenerateEqualsAndHash // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaGenerateEqualsAndHash
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaGenerateEqualsAndHash
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaGenerateEqualsAndHash: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaGenerateEqualsAndHash] = [
      .noneHasJavaGenerateEqualsAndHash,
    ]

  }

  enum hasJavaGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaGenericServices] = [
      .noneHasJavaGenericServices,
    ]

  }

  enum hasJavaMultipleFiles: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaMultipleFiles // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaMultipleFiles
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaMultipleFiles
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaMultipleFiles: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaMultipleFiles] = [
      .noneHasJavaMultipleFiles,
    ]

  }

  enum hasJavaOuterClassname: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaOuterClassname // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaOuterClassname
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaOuterClassname
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaOuterClassname: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaOuterClassname] = [
      .noneHasJavaOuterClassname,
    ]

  }

  enum hasJavaPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaPackage] = [
      .noneHasJavaPackage,
    ]

  }

  enum hasJavaStringCheckUtf8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJavaStringCheckUtf8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJavaStringCheckUtf8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJavaStringCheckUtf8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJavaStringCheckUtf8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaStringCheckUtf8] = [
      .noneHasJavaStringCheckUtf8,
    ]

  }

  enum hasJsonFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJsonFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJsonFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJsonFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJsonFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJsonFormat] = [
      .noneHasJsonFormat,
    ]

  }

  enum hasJsonName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJsonName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJsonName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJsonName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJsonName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJsonName] = [
      .noneHasJsonName,
    ]

  }

  enum hasJstype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasJstype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasJstype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasJstype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasJstype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJstype] = [
      .noneHasJstype,
    ]

  }

  enum hasLabel: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasLabel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasLabel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasLabel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasLabel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLabel] = [
      .noneHasLabel,
    ]

  }

  enum hasLazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLazy] = [
      .noneHasLazy,
    ]

  }

  enum hasLeadingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasLeadingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasLeadingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasLeadingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasLeadingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLeadingComments] = [
      .noneHasLeadingComments,
    ]

  }

  enum hasMapEntry: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasMapEntry // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasMapEntry
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasMapEntry
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasMapEntry: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMapEntry] = [
      .noneHasMapEntry,
    ]

  }

  enum hasMaximumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasMaximumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasMaximumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasMaximumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasMaximumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMaximumEdition] = [
      .noneHasMaximumEdition,
    ]

  }

  enum hasMessageEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasMessageEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasMessageEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasMessageEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasMessageEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMessageEncoding] = [
      .noneHasMessageEncoding,
    ]

  }

  enum hasMessageSetWireFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasMessageSetWireFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasMessageSetWireFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasMessageSetWireFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasMessageSetWireFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMessageSetWireFormat] = [
      .noneHasMessageSetWireFormat,
    ]

  }

  enum hasMinimumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasMinimumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasMinimumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasMinimumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasMinimumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMinimumEdition] = [
      .noneHasMinimumEdition,
    ]

  }

  enum hasName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasName] = [
      .noneHasName,
    ]

  }

  enum hasNamePart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasNamePart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasNamePart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasNamePart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasNamePart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNamePart] = [
      .noneHasNamePart,
    ]

  }

  enum hasNegativeIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasNegativeIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasNegativeIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasNegativeIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasNegativeIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNegativeIntValue] = [
      .noneHasNegativeIntValue,
    ]

  }

  enum hasNoStandardDescriptorAccessor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasNoStandardDescriptorAccessor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasNoStandardDescriptorAccessor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasNoStandardDescriptorAccessor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasNoStandardDescriptorAccessor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNoStandardDescriptorAccessor] = [
      .noneHasNoStandardDescriptorAccessor,
    ]

  }

  enum hasNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNumber] = [
      .noneHasNumber,
    ]

  }

  enum hasObjcClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasObjcClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasObjcClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasObjcClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasObjcClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasObjcClassPrefix] = [
      .noneHasObjcClassPrefix,
    ]

  }

  enum hasOneofIndex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasOneofIndex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasOneofIndex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasOneofIndex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasOneofIndex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOneofIndex] = [
      .noneHasOneofIndex,
    ]

  }

  enum hasOptimizeFor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasOptimizeFor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasOptimizeFor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasOptimizeFor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasOptimizeFor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOptimizeFor] = [
      .noneHasOptimizeFor,
    ]

  }

  enum hasOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOptions] = [
      .noneHasOptions,
    ]

  }

  enum hasOutputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasOutputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasOutputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasOutputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasOutputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOutputType] = [
      .noneHasOutputType,
    ]

  }

  enum hasOverridableFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasOverridableFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasOverridableFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasOverridableFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasOverridableFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOverridableFeatures] = [
      .noneHasOverridableFeatures,
    ]

  }

  enum hasPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPackage] = [
      .noneHasPackage,
    ]

  }

  enum hasPacked: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPacked // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPacked
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPacked
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPacked: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPacked] = [
      .noneHasPacked,
    ]

  }

  enum hasPhpClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPhpClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPhpClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPhpClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPhpClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpClassPrefix] = [
      .noneHasPhpClassPrefix,
    ]

  }

  enum hasPhpMetadataNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPhpMetadataNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPhpMetadataNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPhpMetadataNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPhpMetadataNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpMetadataNamespace] = [
      .noneHasPhpMetadataNamespace,
    ]

  }

  enum hasPhpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPhpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPhpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPhpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPhpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpNamespace] = [
      .noneHasPhpNamespace,
    ]

  }

  enum hasPositiveIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPositiveIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPositiveIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPositiveIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPositiveIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPositiveIntValue] = [
      .noneHasPositiveIntValue,
    ]

  }

  enum hasProto3Optional: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasProto3Optional // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasProto3Optional
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasProto3Optional
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasProto3Optional: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasProto3Optional] = [
      .noneHasProto3Optional,
    ]

  }

  enum hasPyGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasPyGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasPyGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasPyGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasPyGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPyGenericServices] = [
      .noneHasPyGenericServices,
    ]

  }

  enum hasRepeated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasRepeated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasRepeated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasRepeated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasRepeated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRepeated] = [
      .noneHasRepeated,
    ]

  }

  enum hasRepeatedFieldEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasRepeatedFieldEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasRepeatedFieldEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasRepeatedFieldEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasRepeatedFieldEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRepeatedFieldEncoding] = [
      .noneHasRepeatedFieldEncoding,
    ]

  }

  enum hasReserved: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasReserved // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasReserved
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasReserved
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasReserved: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasReserved] = [
      .noneHasReserved,
    ]

  }

  enum hasRetention: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasRetention // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasRetention
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasRetention
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasRetention: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRetention] = [
      .noneHasRetention,
    ]

  }

  enum hasRubyPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasRubyPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasRubyPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasRubyPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasRubyPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRubyPackage] = [
      .noneHasRubyPackage,
    ]

  }

  enum hasSemantic: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSemantic // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSemantic
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSemantic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSemantic: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSemantic] = [
      .noneHasSemantic,
    ]

  }

  enum hasServerStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasServerStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasServerStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasServerStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasServerStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasServerStreaming] = [
      .noneHasServerStreaming,
    ]

  }

  enum hasSourceCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSourceCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSourceCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSourceCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSourceCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceCodeInfo] = [
      .noneHasSourceCodeInfo,
    ]

  }

  enum hasSourceContext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSourceContext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSourceContext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSourceContext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSourceContext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceContext] = [
      .noneHasSourceContext,
    ]

  }

  enum hasSourceFile: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSourceFile // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSourceFile
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSourceFile
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSourceFile: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceFile] = [
      .noneHasSourceFile,
    ]

  }

  enum hasStart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasStart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasStart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasStart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasStart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasStart] = [
      .noneHasStart,
    ]

  }

  enum hasStringValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasStringValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasStringValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasStringValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasStringValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasStringValue] = [
      .noneHasStringValue,
    ]

  }

  enum hasSwiftPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSwiftPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSwiftPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSwiftPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSwiftPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSwiftPrefix] = [
      .noneHasSwiftPrefix,
    ]

  }

  enum hasSyntax: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasSyntax // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasSyntax
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasSyntax
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasSyntax: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSyntax] = [
      .noneHasSyntax,
    ]

  }

  enum hasTrailingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasTrailingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasTrailingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasTrailingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasTrailingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasTrailingComments] = [
      .noneHasTrailingComments,
    ]

  }

  enum hasType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasType] = [
      .noneHasType,
    ]

  }

  enum hasTypeName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasTypeName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasTypeName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasTypeName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasTypeName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasTypeName] = [
      .noneHasTypeName,
    ]

  }

  enum hasUnverifiedLazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasUnverifiedLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasUnverifiedLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasUnverifiedLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasUnverifiedLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasUnverifiedLazy] = [
      .noneHasUnverifiedLazy,
    ]

  }

  enum hasUtf8Validation: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasUtf8Validation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasUtf8Validation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasUtf8Validation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasUtf8Validation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasUtf8Validation] = [
      .noneHasUtf8Validation,
    ]

  }

  enum hasValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasValue] = [
      .noneHasValue,
    ]

  }

  enum hasVerification: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasVerification // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasVerification
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasVerification
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasVerification: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasVerification] = [
      .noneHasVerification,
    ]

  }

  enum hasWeak: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHasWeak // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHasWeak
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHasWeak
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHasWeak: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasWeak] = [
      .noneHasWeak,
    ]

  }

  enum hour: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneHour // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneHour
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneHour
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneHour: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hour] = [
      .noneHour,
    ]

  }

  enum i: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneI // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneI
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneI
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneI: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.i] = [
      .noneI,
    ]

  }

  enum idempotencyLevel: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIdempotencyLevel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIdempotencyLevel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIdempotencyLevel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIdempotencyLevel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.idempotencyLevel] = [
      .noneIdempotencyLevel,
    ]

  }

  enum identifierValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIdentifierValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIdentifierValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIdentifierValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIdentifierValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.identifierValue] = [
      .noneIdentifierValue,
    ]

  }

  enum ifEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ifEnum] = [
      .noneIf,
    ]

  }

  enum ignoreUnknownExtensionFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIgnoreUnknownExtensionFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIgnoreUnknownExtensionFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIgnoreUnknownExtensionFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIgnoreUnknownExtensionFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ignoreUnknownExtensionFields] = [
      .noneIgnoreUnknownExtensionFields,
    ]

  }

  enum ignoreUnknownFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIgnoreUnknownFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIgnoreUnknownFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIgnoreUnknownFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIgnoreUnknownFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ignoreUnknownFields] = [
      .noneIgnoreUnknownFields,
    ]

  }

  enum index: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIndex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIndex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIndex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIndex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.index] = [
      .noneIndex,
    ]

  }

  enum initEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInit // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInit
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInit: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.initEnum] = [
      .noneInit,
    ]

  }

  enum inoutEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInout // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInout
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInout
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInout: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.inoutEnum] = [
      .noneInout,
    ]

  }

  enum inputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.inputType] = [
      .noneInputType,
    ]

  }

  enum insert: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInsert // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInsert
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInsert
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInsert: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.insert] = [
      .noneInsert,
    ]

  }

  enum IntEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.IntEnum] = [
      .noneInt,
    ]

  }

  enum Int32Enum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int32Enum] = [
      .noneInt32,
    ]

  }

  enum Int32Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt32Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt32Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt32Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt32Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int32Value] = [
      .noneInt32Value,
    ]

  }

  enum Int64Enum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int64Enum] = [
      .noneInt64,
    ]

  }

  enum Int64Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt64Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt64Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt64Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt64Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int64Value] = [
      .noneInt64Value,
    ]

  }

  enum Int8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInt8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInt8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInt8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInt8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int8] = [
      .noneInt8,
    ]

  }

  enum integerLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIntegerLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIntegerLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIntegerLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIntegerLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.integerLiteral] = [
      .noneIntegerLiteral,
    ]

  }

  enum IntegerLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIntegerLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIntegerLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIntegerLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIntegerLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.IntegerLiteralType] = [
      .noneIntegerLiteralType,
    ]

  }

  enum intern: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIntern // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIntern
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIntern
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIntern: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.intern] = [
      .noneIntern,
    ]

  }

  enum Internal: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInternal // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInternal
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInternal
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInternal: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Internal] = [
      .noneInternal,
    ]

  }

  enum InternalState: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInternalState // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInternalState
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInternalState
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInternalState: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.InternalState] = [
      .noneInternalState,
    ]

  }

  enum intersect: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIntersect // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIntersect
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIntersect
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIntersect: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.intersect] = [
      .noneIntersect,
    ]

  }

  enum into: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.into] = [
      .noneInto,
    ]

  }

  enum ints: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneInts // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneInts
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneInts
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneInts: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ints] = [
      .noneInts,
    ]

  }

  enum isA: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsA // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsA
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsA
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsA: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isA] = [
      .noneIsA,
    ]

  }

  enum isEqual: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsEqual // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsEqual
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsEqual
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsEqual: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isEqual] = [
      .noneIsEqual,
    ]

  }

  enum isEqualTo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsEqualTo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsEqualTo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsEqualTo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsEqualTo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isEqualTo] = [
      .noneIsEqualTo,
    ]

  }

  enum isExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isExtension] = [
      .noneIsExtension,
    ]

  }

  enum isInitializedEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsInitialized // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsInitialized
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsInitialized
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsInitialized: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isInitializedEnum] = [
      .noneIsInitialized,
    ]

  }

  enum isNegative: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsNegative // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsNegative
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsNegative
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsNegative: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isNegative] = [
      .noneIsNegative,
    ]

  }

  enum isPathValid: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsPathValid // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsPathValid
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsPathValid
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsPathValid: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isPathValid] = [
      .noneIsPathValid,
    ]

  }

  enum isValid: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIsValid // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIsValid
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIsValid
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIsValid: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isValid] = [
      .noneIsValid,
    ]

  }

  enum itemTagsEncodedSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneItemTagsEncodedSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneItemTagsEncodedSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneItemTagsEncodedSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneItemTagsEncodedSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.itemTagsEncodedSize] = [
      .noneItemTagsEncodedSize,
    ]

  }

  enum iterator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneIterator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneIterator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneIterator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneIterator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.iterator] = [
      .noneIterator,
    ]

  }

  enum javaGenerateEqualsAndHash: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaGenerateEqualsAndHash // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaGenerateEqualsAndHash
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaGenerateEqualsAndHash
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaGenerateEqualsAndHash: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaGenerateEqualsAndHash] = [
      .noneJavaGenerateEqualsAndHash,
    ]

  }

  enum javaGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaGenericServices] = [
      .noneJavaGenericServices,
    ]

  }

  enum javaMultipleFiles: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaMultipleFiles // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaMultipleFiles
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaMultipleFiles
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaMultipleFiles: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaMultipleFiles] = [
      .noneJavaMultipleFiles,
    ]

  }

  enum javaOuterClassname: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaOuterClassname // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaOuterClassname
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaOuterClassname
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaOuterClassname: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaOuterClassname] = [
      .noneJavaOuterClassname,
    ]

  }

  enum javaPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaPackage] = [
      .noneJavaPackage,
    ]

  }

  enum javaStringCheckUtf8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJavaStringCheckUtf8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJavaStringCheckUtf8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJavaStringCheckUtf8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJavaStringCheckUtf8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaStringCheckUtf8] = [
      .noneJavaStringCheckUtf8,
    ]

  }

  enum JSONDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsondecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsondecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsondecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsondecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecoder] = [
      .noneJsondecoder,
    ]

  }

  enum JSONDecodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsondecodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsondecodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsondecodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsondecodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecodingError] = [
      .noneJsondecodingError,
    ]

  }

  enum JSONDecodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsondecodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsondecodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsondecodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsondecodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecodingOptions] = [
      .noneJsondecodingOptions,
    ]

  }

  enum jsonEncoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonEncoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonEncoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonEncoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonEncoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonEncoder] = [
      .noneJsonEncoder,
    ]

  }

  enum JSONEncodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonencodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonencodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonencodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonencodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingError] = [
      .noneJsonencodingError,
    ]

  }

  enum JSONEncodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonencodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonencodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonencodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonencodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingOptions] = [
      .noneJsonencodingOptions,
    ]

  }

  enum JSONEncodingVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonencodingVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonencodingVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonencodingVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonencodingVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingVisitor] = [
      .noneJsonencodingVisitor,
    ]

  }

  enum jsonFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonFormat] = [
      .noneJsonFormat,
    ]

  }

  enum JSONMapEncodingVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonmapEncodingVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonmapEncodingVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonmapEncodingVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonmapEncodingVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONMapEncodingVisitor] = [
      .noneJsonmapEncodingVisitor,
    ]

  }

  enum jsonName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonName] = [
      .noneJsonName,
    ]

  }

  enum jsonPath: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonPath // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonPath
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonPath
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonPath: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonPath] = [
      .noneJsonPath,
    ]

  }

  enum jsonPaths: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonPaths // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonPaths
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonPaths
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonPaths: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonPaths] = [
      .noneJsonPaths,
    ]

  }

  enum JSONScanner: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonscanner // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonscanner
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonscanner
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonscanner: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONScanner] = [
      .noneJsonscanner,
    ]

  }

  enum jsonString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonString] = [
      .noneJsonString,
    ]

  }

  enum jsonText: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonText // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonText
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonText
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonText: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonText] = [
      .noneJsonText,
    ]

  }

  enum jsonUTF8Bytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonUtf8Bytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonUtf8Bytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonUtf8Bytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonUtf8Bytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonUTF8Bytes] = [
      .noneJsonUtf8Bytes,
    ]

  }

  enum jsonUTF8Data: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJsonUtf8Data // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJsonUtf8Data
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJsonUtf8Data
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJsonUtf8Data: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonUTF8Data] = [
      .noneJsonUtf8Data,
    ]

  }

  enum jstype: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneJstype // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneJstype
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneJstype
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneJstype: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jstype] = [
      .noneJstype,
    ]

  }

  enum k: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneK // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneK
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneK
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneK: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.k] = [
      .noneK,
    ]

  }

  enum kChunkSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKChunkSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKChunkSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKChunkSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKChunkSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.kChunkSize] = [
      .noneKChunkSize,
    ]

  }

  enum Key: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKey // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKey
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKey
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKey: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Key] = [
      .noneKey,
    ]

  }

  enum keyField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKeyField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKeyField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKeyField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKeyField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.keyField] = [
      .noneKeyField,
    ]

  }

  enum keyFieldOpt: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKeyFieldOpt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKeyFieldOpt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKeyFieldOpt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKeyFieldOpt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.keyFieldOpt] = [
      .noneKeyFieldOpt,
    ]

  }

  enum KeyType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKeyType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKeyType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKeyType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKeyType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.KeyType] = [
      .noneKeyType,
    ]

  }

  enum kind: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneKind // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneKind
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneKind
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneKind: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.kind] = [
      .noneKind,
    ]

  }

  enum l: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.l] = [
      .noneL,
    ]

  }

  enum label: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLabel // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLabel
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLabel
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLabel: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.label] = [
      .noneLabel,
    ]

  }

  enum lazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lazy] = [
      .noneLazy,
    ]

  }

  enum leadingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLeadingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLeadingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLeadingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLeadingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.leadingComments] = [
      .noneLeadingComments,
    ]

  }

  enum leadingDetachedComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLeadingDetachedComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLeadingDetachedComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLeadingDetachedComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLeadingDetachedComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.leadingDetachedComments] = [
      .noneLeadingDetachedComments,
    ]

  }

  enum length: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLength // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLength
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLength
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLength: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.length] = [
      .noneLength,
    ]

  }

  enum lessThan: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLessThan // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLessThan
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLessThan
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLessThan: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lessThan] = [
      .noneLessThan,
    ]

  }

  enum letEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.letEnum] = [
      .noneLet,
    ]

  }

  enum lhs: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLhs // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLhs
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLhs
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLhs: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lhs] = [
      .noneLhs,
    ]

  }

  enum line: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLine // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLine
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLine
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLine: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.line] = [
      .noneLine,
    ]

  }

  enum list: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneList // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneList
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneList
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneList: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.list] = [
      .noneList,
    ]

  }

  enum listOfMessages: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneListOfMessages // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneListOfMessages
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneListOfMessages
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneListOfMessages: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.listOfMessages] = [
      .noneListOfMessages,
    ]

  }

  enum listValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneListValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneListValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneListValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneListValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.listValue] = [
      .noneListValue,
    ]

  }

  enum littleEndian: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLittleEndian // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLittleEndian
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLittleEndian
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLittleEndian: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.littleEndian] = [
      .noneLittleEndian,
    ]

  }

  enum load: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLoad // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLoad
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLoad
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLoad: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.load] = [
      .noneLoad,
    ]

  }

  enum localHasher: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLocalHasher // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLocalHasher
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLocalHasher
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLocalHasher: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.localHasher] = [
      .noneLocalHasher,
    ]

  }

  enum location: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneLocation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneLocation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneLocation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneLocation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.location] = [
      .noneLocation,
    ]

  }

  enum M: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneM // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneM
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneM
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneM: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.M] = [
      .noneM,
    ]

  }

  enum major: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMajor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMajor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMajor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMajor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.major] = [
      .noneMajor,
    ]

  }

  enum makeAsyncIterator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMakeAsyncIterator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMakeAsyncIterator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMakeAsyncIterator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMakeAsyncIterator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.makeAsyncIterator] = [
      .noneMakeAsyncIterator,
    ]

  }

  enum makeIterator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMakeIterator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMakeIterator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMakeIterator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMakeIterator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.makeIterator] = [
      .noneMakeIterator,
    ]

  }

  enum malformedLength: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMalformedLength // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMalformedLength
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMalformedLength
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMalformedLength: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.malformedLength] = [
      .noneMalformedLength,
    ]

  }

  enum mapEntry: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMapEntry // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMapEntry
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMapEntry
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMapEntry: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapEntry] = [
      .noneMapEntry,
    ]

  }

  enum MapKeyType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMapKeyType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMapKeyType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMapKeyType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMapKeyType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MapKeyType] = [
      .noneMapKeyType,
    ]

  }

  enum mapToMessages: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMapToMessages // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMapToMessages
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMapToMessages
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMapToMessages: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapToMessages] = [
      .noneMapToMessages,
    ]

  }

  enum MapValueType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMapValueType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMapValueType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMapValueType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMapValueType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MapValueType] = [
      .noneMapValueType,
    ]

  }

  enum mapVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMapVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMapVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMapVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMapVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapVisitor] = [
      .noneMapVisitor,
    ]

  }

  enum mask: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMask // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMask
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMask
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMask: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mask] = [
      .noneMask,
    ]

  }

  enum maximumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMaximumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMaximumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMaximumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMaximumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.maximumEdition] = [
      .noneMaximumEdition,
    ]

  }

  enum mdayStart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMdayStart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMdayStart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMdayStart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMdayStart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mdayStart] = [
      .noneMdayStart,
    ]

  }

  enum merge: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMerge // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMerge
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMerge
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMerge: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.merge] = [
      .noneMerge,
    ]

  }

  enum MergeOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMergeOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMergeOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMergeOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMergeOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MergeOptions] = [
      .noneMergeOptions,
    ]

  }

  enum message: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.message] = [
      .noneMessage,
    ]

  }

  enum messageDepthLimit: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageDepthLimit // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageDepthLimit
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageDepthLimit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageDepthLimit: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageDepthLimit] = [
      .noneMessageDepthLimit,
    ]

  }

  enum messageEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageEncoding] = [
      .noneMessageEncoding,
    ]

  }

  enum MessageExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageExtension] = [
      .noneMessageExtension,
    ]

  }

  enum MessageImplementationBase: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageImplementationBase // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageImplementationBase
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageImplementationBase
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageImplementationBase: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageImplementationBase] = [
      .noneMessageImplementationBase,
    ]

  }

  enum MessageOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageOptions] = [
      .noneMessageOptions,
    ]

  }

  enum MessageSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageSet] = [
      .noneMessageSet,
    ]

  }

  enum messageSetWireFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageSetWireFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageSetWireFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageSetWireFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageSetWireFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageSetWireFormat] = [
      .noneMessageSetWireFormat,
    ]

  }

  enum messageSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageSize] = [
      .noneMessageSize,
    ]

  }

  enum messageType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMessageType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMessageType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMessageType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMessageType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageType] = [
      .noneMessageType,
    ]

  }

  enum Method: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMethod // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMethod
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMethod
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMethod: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Method] = [
      .noneMethod,
    ]

  }

  enum MethodDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMethodDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMethodDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMethodDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMethodDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MethodDescriptorProto] = [
      .noneMethodDescriptorProto,
    ]

  }

  enum MethodOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMethodOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMethodOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMethodOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMethodOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MethodOptions] = [
      .noneMethodOptions,
    ]

  }

  enum methods: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMethods // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMethods
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMethods
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMethods: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.methods] = [
      .noneMethods,
    ]

  }

  enum min: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.min] = [
      .noneMin,
    ]

  }

  enum minimumEdition: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMinimumEdition // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMinimumEdition
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMinimumEdition
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMinimumEdition: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.minimumEdition] = [
      .noneMinimumEdition,
    ]

  }

  enum minor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMinor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMinor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMinor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMinor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.minor] = [
      .noneMinor,
    ]

  }

  enum Mixin: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMixin // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMixin
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMixin
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMixin: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Mixin] = [
      .noneMixin,
    ]

  }

  enum mixins: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMixins // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMixins
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMixins
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMixins: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mixins] = [
      .noneMixins,
    ]

  }

  enum modify: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneModify // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneModify
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneModify
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneModify: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.modify] = [
      .noneModify,
    ]

  }

  enum month: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMonth // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMonth
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMonth
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMonth: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.month] = [
      .noneMonth,
    ]

  }

  enum msgExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMsgExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMsgExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMsgExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMsgExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.msgExtension] = [
      .noneMsgExtension,
    ]

  }

  enum mutating: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneMutating // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneMutating
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneMutating
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneMutating: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mutating] = [
      .noneMutating,
    ]

  }

  enum n: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case oneN // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .oneN
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .oneN
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .oneN: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.n] = [
      .oneN,
    ]

  }

  enum name: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.name] = [
      .noneName,
    ]

  }

  enum NameDescription: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNameDescription // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNameDescription
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNameDescription
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNameDescription: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NameDescription] = [
      .noneNameDescription,
    ]

  }

  enum NameMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNameMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNameMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNameMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNameMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NameMap] = [
      .noneNameMap,
    ]

  }

  enum NamePart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNamePart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNamePart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNamePart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNamePart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NamePart] = [
      .noneNamePart,
    ]

  }

  enum names: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNames // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNames
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNames
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNames: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.names] = [
      .noneNames,
    ]

  }

  enum nanos: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNanos // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNanos
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNanos
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNanos: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nanos] = [
      .noneNanos,
    ]

  }

  enum negativeIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNegativeIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNegativeIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNegativeIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNegativeIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.negativeIntValue] = [
      .noneNegativeIntValue,
    ]

  }

  enum nestedType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNestedType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNestedType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNestedType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNestedType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nestedType] = [
      .noneNestedType,
    ]

  }

  enum newExtensible: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNewExtensible // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNewExtensible
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNewExtensible
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNewExtensible: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newExtensible] = [
      .noneNewExtensible,
    ]

  }

  enum newL: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNewL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNewL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNewL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNewL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newL] = [
      .noneNewL,
    ]

  }

  enum newList: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNewList // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNewList
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNewList
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNewList: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newList] = [
      .noneNewList,
    ]

  }

  enum newMessage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNewMessage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNewMessage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNewMessage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNewMessage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newMessage] = [
      .noneNewMessage,
    ]

  }

  enum newValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNewValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNewValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNewValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNewValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newValue] = [
      .noneNewValue,
    ]

  }

  enum next: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.next] = [
      .noneNext,
    ]

  }

  enum nextByte: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNextByte // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNextByte
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNextByte
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNextByte: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextByte] = [
      .noneNextByte,
    ]

  }

  enum nextFieldNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNextFieldNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNextFieldNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNextFieldNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNextFieldNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextFieldNumber] = [
      .noneNextFieldNumber,
    ]

  }

  enum nextVarInt: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNextVarInt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNextVarInt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNextVarInt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNextVarInt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextVarInt] = [
      .noneNextVarInt,
    ]

  }

  enum nilEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNil // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNil
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNil
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNil: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nilEnum] = [
      .noneNil,
    ]

  }

  enum nilLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNilLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNilLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNilLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNilLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nilLiteral] = [
      .noneNilLiteral,
    ]

  }

  enum noBytesAvailable: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNoBytesAvailable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNoBytesAvailable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNoBytesAvailable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNoBytesAvailable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.noBytesAvailable] = [
      .noneNoBytesAvailable,
    ]

  }

  enum noStandardDescriptorAccessor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNoStandardDescriptorAccessor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNoStandardDescriptorAccessor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNoStandardDescriptorAccessor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNoStandardDescriptorAccessor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.noStandardDescriptorAccessor] = [
      .noneNoStandardDescriptorAccessor,
    ]

  }

  enum nullValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNullValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNullValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNullValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNullValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nullValue] = [
      .noneNullValue,
    ]

  }

  enum number: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.number] = [
      .noneNumber,
    ]

  }

  enum numberValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneNumberValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneNumberValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneNumberValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneNumberValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.numberValue] = [
      .noneNumberValue,
    ]

  }

  enum objcClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneObjcClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneObjcClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneObjcClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneObjcClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.objcClassPrefix] = [
      .noneObjcClassPrefix,
    ]

  }

  enum of: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.of] = [
      .noneOf,
    ]

  }

  enum oneofDecl: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneofDecl // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneofDecl
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneofDecl
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneofDecl: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofDecl] = [
      .noneOneofDecl,
    ]

  }

  enum OneofDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneofDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneofDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneofDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneofDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneofDescriptorProto] = [
      .noneOneofDescriptorProto,
    ]

  }

  enum oneofIndex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneofIndex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneofIndex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneofIndex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneofIndex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofIndex] = [
      .noneOneofIndex,
    ]

  }

  enum OneofOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneofOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneofOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneofOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneofOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneofOptions] = [
      .noneOneofOptions,
    ]

  }

  enum oneofs: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneofs // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneofs
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneofs
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneofs: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofs] = [
      .noneOneofs,
    ]

  }

  enum OneOf_Kind: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOneOfKind // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOneOfKind
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOneOfKind
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOneOfKind: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneOf_Kind] = [
      .noneOneOfKind,
    ]

  }

  enum optimizeFor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptimizeFor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptimizeFor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptimizeFor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptimizeFor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.optimizeFor] = [
      .noneOptimizeFor,
    ]

  }

  enum OptimizeMode: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptimizeMode // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptimizeMode
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptimizeMode
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptimizeMode: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptimizeMode] = [
      .noneOptimizeMode,
    ]

  }

  enum Option: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOption // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOption
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOption
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOption: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Option] = [
      .noneOption,
    ]

  }

  enum OptionalEnumExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionalEnumExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionalEnumExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionalEnumExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionalEnumExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalEnumExtensionField] = [
      .noneOptionalEnumExtensionField,
    ]

  }

  enum OptionalExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionalExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionalExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionalExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionalExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalExtensionField] = [
      .noneOptionalExtensionField,
    ]

  }

  enum OptionalGroupExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionalGroupExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionalGroupExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionalGroupExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionalGroupExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalGroupExtensionField] = [
      .noneOptionalGroupExtensionField,
    ]

  }

  enum OptionalMessageExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionalMessageExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionalMessageExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionalMessageExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionalMessageExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalMessageExtensionField] = [
      .noneOptionalMessageExtensionField,
    ]

  }

  enum OptionRetention: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionRetention // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionRetention
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionRetention
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionRetention: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionRetention] = [
      .noneOptionRetention,
    ]

  }

  enum options: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.options] = [
      .noneOptions,
    ]

  }

  enum OptionTargetType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOptionTargetType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOptionTargetType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOptionTargetType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOptionTargetType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionTargetType] = [
      .noneOptionTargetType,
    ]

  }

  enum other: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOther // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOther
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOther
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOther: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.other] = [
      .noneOther,
    ]

  }

  enum others: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOthers // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOthers
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOthers
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOthers: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.others] = [
      .noneOthers,
    ]

  }

  enum out: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOut // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOut
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOut
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOut: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.out] = [
      .noneOut,
    ]

  }

  enum outputType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOutputType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOutputType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOutputType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOutputType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.outputType] = [
      .noneOutputType,
    ]

  }

  enum overridableFeatures: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneOverridableFeatures // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneOverridableFeatures
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneOverridableFeatures
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneOverridableFeatures: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.overridableFeatures] = [
      .noneOverridableFeatures,
    ]

  }

  enum p: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneP // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneP
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneP
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneP: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.p] = [
      .noneP,
    ]

  }

  enum package: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.package] = [
      .nonePackage,
    ]

  }

  enum packed: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePacked // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePacked
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePacked
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePacked: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.packed] = [
      .nonePacked,
    ]

  }

  enum PackedEnumExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePackedEnumExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePackedEnumExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePackedEnumExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePackedEnumExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PackedEnumExtensionField] = [
      .nonePackedEnumExtensionField,
    ]

  }

  enum PackedExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePackedExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePackedExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePackedExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePackedExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PackedExtensionField] = [
      .nonePackedExtensionField,
    ]

  }

  enum padding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePadding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePadding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePadding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePadding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.padding] = [
      .nonePadding,
    ]

  }

  enum parent: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneParent // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneParent
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneParent
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneParent: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.parent] = [
      .noneParent,
    ]

  }

  enum parse: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneParse // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneParse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneParse
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneParse: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.parse] = [
      .noneParse,
    ]

  }

  enum partial: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePartial // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePartial
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePartial
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePartial: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.partial] = [
      .nonePartial,
    ]

  }

  enum path: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePath // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePath
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePath
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePath: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.path] = [
      .nonePath,
    ]

  }

  enum PathDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePathDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePathDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePathDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePathDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathDecoder] = [
      .nonePathDecoder,
    ]

  }

  enum PathDecodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePathDecodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePathDecodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePathDecodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePathDecodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathDecodingError] = [
      .nonePathDecodingError,
    ]

  }

  enum paths: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePaths // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePaths
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePaths
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePaths: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.paths] = [
      .nonePaths,
    ]

  }

  enum PathVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePathVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePathVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePathVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePathVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathVisitor] = [
      .nonePathVisitor,
    ]

  }

  enum payload: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePayload // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePayload
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePayload
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePayload: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.payload] = [
      .nonePayload,
    ]

  }

  enum payloadSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePayloadSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePayloadSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePayloadSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePayloadSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.payloadSize] = [
      .nonePayloadSize,
    ]

  }

  enum phpClassPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePhpClassPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePhpClassPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePhpClassPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePhpClassPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpClassPrefix] = [
      .nonePhpClassPrefix,
    ]

  }

  enum phpMetadataNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePhpMetadataNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePhpMetadataNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePhpMetadataNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePhpMetadataNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpMetadataNamespace] = [
      .nonePhpMetadataNamespace,
    ]

  }

  enum phpNamespace: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePhpNamespace // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePhpNamespace
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePhpNamespace
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePhpNamespace: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpNamespace] = [
      .nonePhpNamespace,
    ]

  }

  enum pos: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePos // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePos
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePos
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePos: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.pos] = [
      .nonePos,
    ]

  }

  enum positiveIntValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePositiveIntValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePositiveIntValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePositiveIntValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePositiveIntValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.positiveIntValue] = [
      .nonePositiveIntValue,
    ]

  }

  enum prefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.prefix] = [
      .nonePrefix,
    ]

  }

  enum preserveProtoFieldNames: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePreserveProtoFieldNames // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePreserveProtoFieldNames
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePreserveProtoFieldNames
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePreserveProtoFieldNames: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.preserveProtoFieldNames] = [
      .nonePreserveProtoFieldNames,
    ]

  }

  enum preTraverse: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePreTraverse // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePreTraverse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePreTraverse
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePreTraverse: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.preTraverse] = [
      .nonePreTraverse,
    ]

  }

  enum prevPath: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePrevPath // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePrevPath
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePrevPath
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePrevPath: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.prevPath] = [
      .nonePrevPath,
    ]

  }

  enum printUnknownFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePrintUnknownFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePrintUnknownFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePrintUnknownFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePrintUnknownFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.printUnknownFields] = [
      .nonePrintUnknownFields,
    ]

  }

  enum proto2: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProto2 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProto2
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProto2
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProto2: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto2] = [
      .noneProto2,
    ]

  }

  enum proto3DefaultValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProto3DefaultValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProto3DefaultValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProto3DefaultValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProto3DefaultValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto3DefaultValue] = [
      .noneProto3DefaultValue,
    ]

  }

  enum proto3Optional: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProto3Optional // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProto3Optional
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProto3Optional
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProto3Optional: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto3Optional] = [
      .noneProto3Optional,
    ]

  }

  enum ProtobufAPIVersionCheck: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufApiversionCheck // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufApiversionCheck
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufApiversionCheck
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufApiversionCheck: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufAPIVersionCheck] = [
      .noneProtobufApiversionCheck,
    ]

  }

  enum ProtobufAPIVersion_2: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufApiversion2 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufApiversion2
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufApiversion2
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufApiversion2: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufAPIVersion_2] = [
      .noneProtobufApiversion2,
    ]

  }

  enum ProtobufBool: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufBool // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufBool
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufBool
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufBool: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufBool] = [
      .noneProtobufBool,
    ]

  }

  enum ProtobufBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufBytes] = [
      .noneProtobufBytes,
    ]

  }

  enum ProtobufDouble: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufDouble // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufDouble
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufDouble
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufDouble: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufDouble] = [
      .noneProtobufDouble,
    ]

  }

  enum ProtobufEnumMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufEnumMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufEnumMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufEnumMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufEnumMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufEnumMap] = [
      .noneProtobufEnumMap,
    ]

  }

  enum protobufExtension: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufExtension // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufExtension
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufExtension
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufExtension: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobufExtension] = [
      .noneProtobufExtension,
    ]

  }

  enum ProtobufFixed32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufFixed32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufFixed32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufFixed32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufFixed32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFixed32] = [
      .noneProtobufFixed32,
    ]

  }

  enum ProtobufFixed64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufFixed64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufFixed64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufFixed64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufFixed64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFixed64] = [
      .noneProtobufFixed64,
    ]

  }

  enum ProtobufFloat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufFloat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufFloat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufFloat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufFloat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFloat] = [
      .noneProtobufFloat,
    ]

  }

  enum ProtobufInt32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufInt32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufInt32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufInt32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufInt32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufInt32] = [
      .noneProtobufInt32,
    ]

  }

  enum ProtobufInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufInt64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufInt64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufInt64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufInt64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufInt64] = [
      .noneProtobufInt64,
    ]

  }

  enum ProtobufMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufMap] = [
      .noneProtobufMap,
    ]

  }

  enum ProtobufMessageMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufMessageMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufMessageMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufMessageMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufMessageMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufMessageMap] = [
      .noneProtobufMessageMap,
    ]

  }

  enum ProtobufSFixed32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufSfixed32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufSfixed32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufSfixed32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufSfixed32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSFixed32] = [
      .noneProtobufSfixed32,
    ]

  }

  enum ProtobufSFixed64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufSfixed64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufSfixed64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufSfixed64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufSfixed64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSFixed64] = [
      .noneProtobufSfixed64,
    ]

  }

  enum ProtobufSInt32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufSint32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufSint32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufSint32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufSint32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSInt32] = [
      .noneProtobufSint32,
    ]

  }

  enum ProtobufSInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufSint64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufSint64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufSint64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufSint64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSInt64] = [
      .noneProtobufSint64,
    ]

  }

  enum ProtobufString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufString] = [
      .noneProtobufString,
    ]

  }

  enum ProtobufUInt32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufUint32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufUint32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufUint32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufUint32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufUInt32] = [
      .noneProtobufUint32,
    ]

  }

  enum ProtobufUInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufUint64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufUint64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufUint64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufUint64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufUInt64] = [
      .noneProtobufUint64,
    ]

  }

  enum protobuf_extensionFieldValues: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufExtensionFieldValues // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufExtensionFieldValues
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufExtensionFieldValues
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufExtensionFieldValues: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_extensionFieldValues] = [
      .noneProtobufExtensionFieldValues,
    ]

  }

  enum protobuf_fieldNumber: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufFieldNumber // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufFieldNumber
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufFieldNumber
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufFieldNumber: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_fieldNumber] = [
      .noneProtobufFieldNumber,
    ]

  }

  enum protobuf_generated_isEqualTo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufGeneratedIsEqualTo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufGeneratedIsEqualTo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufGeneratedIsEqualTo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufGeneratedIsEqualTo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_generated_isEqualTo] = [
      .noneProtobufGeneratedIsEqualTo,
    ]

  }

  enum protobuf_nameMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufNameMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufNameMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufNameMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufNameMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_nameMap] = [
      .noneProtobufNameMap,
    ]

  }

  enum protobuf_newField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufNewField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufNewField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufNewField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufNewField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_newField] = [
      .noneProtobufNewField,
    ]

  }

  enum protobuf_package: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtobufPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtobufPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtobufPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtobufPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_package] = [
      .noneProtobufPackage,
    ]

  }

  enum protocolEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtocol // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtocol
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtocol
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtocol: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protocolEnum] = [
      .noneProtocol,
    ]

  }

  enum protoFieldName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtoFieldName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtoFieldName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtoFieldName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtoFieldName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoFieldName] = [
      .noneProtoFieldName,
    ]

  }

  enum protoMessageNameEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtoMessageName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtoMessageName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtoMessageName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtoMessageName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoMessageNameEnum] = [
      .noneProtoMessageName,
    ]

  }

  enum ProtoNameProviding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtoNameProviding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtoNameProviding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtoNameProviding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtoNameProviding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtoNameProviding] = [
      .noneProtoNameProviding,
    ]

  }

  enum protoPaths: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneProtoPaths // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneProtoPaths
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneProtoPaths
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneProtoPaths: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoPaths] = [
      .noneProtoPaths,
    ]

  }

  enum publicEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePublic // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePublic
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePublic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePublic: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.publicEnum] = [
      .nonePublic,
    ]

  }

  enum publicDependency: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePublicDependency // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePublicDependency
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePublicDependency
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePublicDependency: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.publicDependency] = [
      .nonePublicDependency,
    ]

  }

  enum putBoolValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutBoolValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutBoolValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutBoolValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutBoolValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putBoolValue] = [
      .nonePutBoolValue,
    ]

  }

  enum putBytesValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutBytesValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutBytesValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutBytesValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutBytesValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putBytesValue] = [
      .nonePutBytesValue,
    ]

  }

  enum putDoubleValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutDoubleValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutDoubleValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutDoubleValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutDoubleValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putDoubleValue] = [
      .nonePutDoubleValue,
    ]

  }

  enum putEnumValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutEnumValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutEnumValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutEnumValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutEnumValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putEnumValue] = [
      .nonePutEnumValue,
    ]

  }

  enum putFixedUInt32: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutFixedUint32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutFixedUint32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutFixedUint32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutFixedUint32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFixedUInt32] = [
      .nonePutFixedUint32,
    ]

  }

  enum putFixedUInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutFixedUint64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutFixedUint64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutFixedUint64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutFixedUint64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFixedUInt64] = [
      .nonePutFixedUint64,
    ]

  }

  enum putFloatValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutFloatValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutFloatValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutFloatValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutFloatValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFloatValue] = [
      .nonePutFloatValue,
    ]

  }

  enum putInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutInt64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutInt64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutInt64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutInt64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putInt64] = [
      .nonePutInt64,
    ]

  }

  enum putStringValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutStringValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutStringValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutStringValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutStringValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putStringValue] = [
      .nonePutStringValue,
    ]

  }

  enum putUInt64: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutUint64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutUint64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutUint64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutUint64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putUInt64] = [
      .nonePutUint64,
    ]

  }

  enum putUInt64Hex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutUint64Hex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutUint64Hex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutUint64Hex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutUint64Hex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putUInt64Hex] = [
      .nonePutUint64Hex,
    ]

  }

  enum putVarInt: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutVarInt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutVarInt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutVarInt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutVarInt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putVarInt] = [
      .nonePutVarInt,
    ]

  }

  enum putZigZagVarInt: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePutZigZagVarInt // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePutZigZagVarInt
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePutZigZagVarInt
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePutZigZagVarInt: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putZigZagVarInt] = [
      .nonePutZigZagVarInt,
    ]

  }

  enum pyGenericServices: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case nonePyGenericServices // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .nonePyGenericServices
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .nonePyGenericServices
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .nonePyGenericServices: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.pyGenericServices] = [
      .nonePyGenericServices,
    ]

  }

  enum R: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneR // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneR
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneR
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneR: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.R] = [
      .noneR,
    ]

  }

  enum rawChars: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRawChars // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRawChars
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRawChars
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRawChars: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rawChars] = [
      .noneRawChars,
    ]

  }

  enum RawRepresentable: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRawRepresentable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRawRepresentable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRawRepresentable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRawRepresentable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RawRepresentable] = [
      .noneRawRepresentable,
    ]

  }

  enum RawValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRawValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRawValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRawValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRawValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RawValue] = [
      .noneRawValue,
    ]

  }

  enum read4HexDigits: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRead4HexDigits // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRead4HexDigits
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRead4HexDigits
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRead4HexDigits: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.read4HexDigits] = [
      .noneRead4HexDigits,
    ]

  }

  enum readBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneReadBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneReadBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneReadBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneReadBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.readBytes] = [
      .noneReadBytes,
    ]

  }

  enum register: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRegister // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRegister
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRegister
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRegister: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.register] = [
      .noneRegister,
    ]

  }

  enum removingAllFieldsOf: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRemovingAllFieldsOf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRemovingAllFieldsOf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRemovingAllFieldsOf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRemovingAllFieldsOf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.removingAllFieldsOf] = [
      .noneRemovingAllFieldsOf,
    ]

  }

  enum repeated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeated] = [
      .noneRepeated,
    ]

  }

  enum RepeatedEnumExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeatedEnumExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeatedEnumExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeatedEnumExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeatedEnumExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedEnumExtensionField] = [
      .noneRepeatedEnumExtensionField,
    ]

  }

  enum RepeatedExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeatedExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeatedExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeatedExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeatedExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedExtensionField] = [
      .noneRepeatedExtensionField,
    ]

  }

  enum repeatedFieldEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeatedFieldEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeatedFieldEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeatedFieldEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeatedFieldEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeatedFieldEncoding] = [
      .noneRepeatedFieldEncoding,
    ]

  }

  enum RepeatedGroupExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeatedGroupExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeatedGroupExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeatedGroupExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeatedGroupExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedGroupExtensionField] = [
      .noneRepeatedGroupExtensionField,
    ]

  }

  enum RepeatedMessageExtensionField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeatedMessageExtensionField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeatedMessageExtensionField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeatedMessageExtensionField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeatedMessageExtensionField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedMessageExtensionField] = [
      .noneRepeatedMessageExtensionField,
    ]

  }

  enum repeating: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRepeating // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRepeating
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRepeating
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRepeating: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeating] = [
      .noneRepeating,
    ]

  }

  enum replaceRepeatedFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneReplaceRepeatedFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneReplaceRepeatedFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneReplaceRepeatedFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneReplaceRepeatedFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.replaceRepeatedFields] = [
      .noneReplaceRepeatedFields,
    ]

  }

  enum requestStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRequestStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRequestStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRequestStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRequestStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requestStreaming] = [
      .noneRequestStreaming,
    ]

  }

  enum requestTypeURL: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRequestTypeURL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRequestTypeURL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRequestTypeURL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRequestTypeURL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requestTypeURL] = [
      .noneRequestTypeURL,
    ]

  }

  enum requiredSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRequiredSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRequiredSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRequiredSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRequiredSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requiredSize] = [
      .noneRequiredSize,
    ]

  }

  enum responseStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneResponseStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneResponseStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneResponseStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneResponseStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.responseStreaming] = [
      .noneResponseStreaming,
    ]

  }

  enum responseTypeURL: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneResponseTypeURL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneResponseTypeURL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneResponseTypeURL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneResponseTypeURL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.responseTypeURL] = [
      .noneResponseTypeURL,
    ]

  }

  enum result: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneResult // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneResult
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneResult
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneResult: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.result] = [
      .noneResult,
    ]

  }

  enum retention: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRetention // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRetention
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRetention
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRetention: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.retention] = [
      .noneRetention,
    ]

  }

  enum rethrowsEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRethrows // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRethrows
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRethrows
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRethrows: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rethrowsEnum] = [
      .noneRethrows,
    ]

  }

  enum returnEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneReturn // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneReturn
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneReturn
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneReturn: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.returnEnum] = [
      .noneReturn,
    ]

  }

  enum ReturnType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneReturnType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneReturnType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneReturnType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneReturnType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ReturnType] = [
      .noneReturnType,
    ]

  }

  enum revision: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRevision // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRevision
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRevision
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRevision: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.revision] = [
      .noneRevision,
    ]

  }

  enum rhs: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRhs // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRhs
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRhs
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRhs: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rhs] = [
      .noneRhs,
    ]

  }

  enum root: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRoot // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRoot
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRoot
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRoot: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.root] = [
      .noneRoot,
    ]

  }

  enum rubyPackage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneRubyPackage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneRubyPackage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneRubyPackage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneRubyPackage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rubyPackage] = [
      .noneRubyPackage,
    ]

  }

  enum s: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneS // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneS
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneS
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneS: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.s] = [
      .noneS,
    ]

  }

  enum sawBackslash: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSawBackslash // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSawBackslash
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSawBackslash
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSawBackslash: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawBackslash] = [
      .noneSawBackslash,
    ]

  }

  enum sawSection4Characters: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSawSection4Characters // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSawSection4Characters
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSawSection4Characters
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSawSection4Characters: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawSection4Characters] = [
      .noneSawSection4Characters,
    ]

  }

  enum sawSection5Characters: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSawSection5Characters // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSawSection5Characters
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSawSection5Characters
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSawSection5Characters: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawSection5Characters] = [
      .noneSawSection5Characters,
    ]

  }

  enum scan: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneScan // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneScan
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneScan
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneScan: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.scan] = [
      .noneScan,
    ]

  }

  enum scanner: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneScanner // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneScanner
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneScanner
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneScanner: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.scanner] = [
      .noneScanner,
    ]

  }

  enum seconds: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSeconds // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSeconds
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSeconds
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSeconds: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.seconds] = [
      .noneSeconds,
    ]

  }

  enum selfEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSelf // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSelf
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSelf
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSelf: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.selfEnum] = [
      .noneSelf,
    ]

  }

  enum semantic: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSemantic // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSemantic
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSemantic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSemantic: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.semantic] = [
      .noneSemantic,
    ]

  }

  enum SendableEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSendable // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSendable
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSendable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSendable: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SendableEnum] = [
      .noneSendable,
    ]

  }

  enum separator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSeparator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSeparator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSeparator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSeparator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.separator] = [
      .noneSeparator,
    ]

  }

  enum serialize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSerialize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSerialize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSerialize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSerialize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serialize] = [
      .noneSerialize,
    ]

  }

  enum serializedBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSerializedBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSerializedBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSerializedBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSerializedBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedBytes] = [
      .noneSerializedBytes,
    ]

  }

  enum serializedData: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSerializedData // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSerializedData
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSerializedData
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSerializedData: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedData] = [
      .noneSerializedData,
    ]

  }

  enum serializedSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSerializedSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSerializedSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSerializedSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSerializedSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedSize] = [
      .noneSerializedSize,
    ]

  }

  enum serverStreaming: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneServerStreaming // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneServerStreaming
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneServerStreaming
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneServerStreaming: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serverStreaming] = [
      .noneServerStreaming,
    ]

  }

  enum service: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneService // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneService
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneService
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneService: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.service] = [
      .noneService,
    ]

  }

  enum ServiceDescriptorProto: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneServiceDescriptorProto // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneServiceDescriptorProto
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneServiceDescriptorProto
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneServiceDescriptorProto: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ServiceDescriptorProto] = [
      .noneServiceDescriptorProto,
    ]

  }

  enum ServiceOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneServiceOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneServiceOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneServiceOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneServiceOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ServiceOptions] = [
      .noneServiceOptions,
    ]

  }

  enum set: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.set] = [
      .noneSet,
    ]

  }

  enum setExtensionValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSetExtensionValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSetExtensionValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSetExtensionValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSetExtensionValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.setExtensionValue] = [
      .noneSetExtensionValue,
    ]

  }

  enum shift: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneShift // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneShift
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneShift
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneShift: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.shift] = [
      .noneShift,
    ]

  }

  enum SimpleExtensionMap: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSimpleExtensionMap // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSimpleExtensionMap
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSimpleExtensionMap
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSimpleExtensionMap: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SimpleExtensionMap] = [
      .noneSimpleExtensionMap,
    ]

  }

  enum size: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.size] = [
      .noneSize,
    ]

  }

  enum sizer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSizer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSizer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSizer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSizer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sizer] = [
      .noneSizer,
    ]

  }

  enum source: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSource // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSource
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSource
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSource: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.source] = [
      .noneSource,
    ]

  }

  enum sourceCodeInfo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSourceCodeInfo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSourceCodeInfo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSourceCodeInfo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSourceCodeInfo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceCodeInfo] = [
      .noneSourceCodeInfo,
    ]

  }

  enum sourceContext: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSourceContext // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSourceContext
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSourceContext
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSourceContext: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceContext] = [
      .noneSourceContext,
    ]

  }

  enum sourceEncoding: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSourceEncoding // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSourceEncoding
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSourceEncoding
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSourceEncoding: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceEncoding] = [
      .noneSourceEncoding,
    ]

  }

  enum sourceFile: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSourceFile // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSourceFile
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSourceFile
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSourceFile: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceFile] = [
      .noneSourceFile,
    ]

  }

  enum SourceLocation: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSourceLocation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSourceLocation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSourceLocation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSourceLocation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SourceLocation] = [
      .noneSourceLocation,
    ]

  }

  enum span: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSpan // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSpan
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSpan
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSpan: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.span] = [
      .noneSpan,
    ]

  }

  enum split: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSplit // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSplit
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSplit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSplit: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.split] = [
      .noneSplit,
    ]

  }

  enum start: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.start] = [
      .noneStart,
    ]

  }

  enum startArray: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartArray // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartArray
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartArray
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartArray: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startArray] = [
      .noneStartArray,
    ]

  }

  enum startArrayObject: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartArrayObject // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartArrayObject
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartArrayObject
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartArrayObject: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startArrayObject] = [
      .noneStartArrayObject,
    ]

  }

  enum startField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startField] = [
      .noneStartField,
    ]

  }

  enum startIndex: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartIndex // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartIndex
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartIndex
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartIndex: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startIndex] = [
      .noneStartIndex,
    ]

  }

  enum startMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startMessageField] = [
      .noneStartMessageField,
    ]

  }

  enum startObject: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartObject // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartObject
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartObject
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartObject: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startObject] = [
      .noneStartObject,
    ]

  }

  enum startRegularField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStartRegularField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStartRegularField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStartRegularField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStartRegularField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startRegularField] = [
      .noneStartRegularField,
    ]

  }

  enum state: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneState // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneState
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneState
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneState: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.state] = [
      .noneState,
    ]

  }

  enum staticEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStatic // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStatic
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStatic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStatic: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.staticEnum] = [
      .noneStatic,
    ]

  }

  enum StaticString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStaticString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStaticString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStaticString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStaticString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StaticString] = [
      .noneStaticString,
    ]

  }

  enum storage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStorage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStorage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStorage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStorage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.storage] = [
      .noneStorage,
    ]

  }

  enum StringEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StringEnum] = [
      .noneString,
    ]

  }

  enum stringLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStringLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStringLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStringLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStringLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringLiteral] = [
      .noneStringLiteral,
    ]

  }

  enum StringLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStringLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStringLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStringLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStringLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StringLiteralType] = [
      .noneStringLiteralType,
    ]

  }

  enum stringResult: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStringResult // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStringResult
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStringResult
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStringResult: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringResult] = [
      .noneStringResult,
    ]

  }

  enum stringValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStringValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStringValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStringValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStringValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringValue] = [
      .noneStringValue,
    ]

  }

  enum structEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStruct // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStruct
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStruct
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStruct: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.structEnum] = [
      .noneStruct,
    ]

  }

  enum structValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneStructValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneStructValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneStructValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneStructValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.structValue] = [
      .noneStructValue,
    ]

  }

  enum subDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSubDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSubDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSubDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSubDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subDecoder] = [
      .noneSubDecoder,
    ]

  }

  enum subscriptEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSubscript // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSubscript
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSubscript
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSubscript: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subscriptEnum] = [
      .noneSubscript,
    ]

  }

  enum subtract: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSubtract // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSubtract
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSubtract
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSubtract: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subtract] = [
      .noneSubtract,
    ]

  }

  enum subVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSubVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSubVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSubVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSubVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subVisitor] = [
      .noneSubVisitor,
    ]

  }

  enum SwiftEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSwift // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSwift
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSwift
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSwift: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SwiftEnum] = [
      .noneSwift,
    ]

  }

  enum swiftPrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSwiftPrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSwiftPrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSwiftPrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSwiftPrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.swiftPrefix] = [
      .noneSwiftPrefix,
    ]

  }

  enum AppleSwiftProtobufContiguousBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAppleSwiftProtobufContiguousBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAppleSwiftProtobufContiguousBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAppleSwiftProtobufContiguousBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAppleSwiftProtobufContiguousBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AppleSwiftProtobufContiguousBytes] = [
      .noneAppleSwiftProtobufContiguousBytes,
    ]

  }

  enum AppleSwiftProtobufError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneAppleSwiftProtobufError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneAppleSwiftProtobufError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneAppleSwiftProtobufError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneAppleSwiftProtobufError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AppleSwiftProtobufError] = [
      .noneAppleSwiftProtobufError,
    ]

  }

  enum syntax: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneSyntax // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneSyntax
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneSyntax
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneSyntax: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.syntax] = [
      .noneSyntax,
    ]

  }

  enum T: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneT // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneT
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneT
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneT: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.T] = [
      .noneT,
    ]

  }

  enum tag: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTag // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTag
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTag
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTag: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tag] = [
      .noneTag,
    ]

  }

  enum targets: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTargets // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTargets
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTargets
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTargets: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.targets] = [
      .noneTargets,
    ]

  }

  enum terminator: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTerminator // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTerminator
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTerminator
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTerminator: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.terminator] = [
      .noneTerminator,
    ]

  }

  enum testDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTestDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTestDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTestDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTestDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.testDecoder] = [
      .noneTestDecoder,
    ]

  }

  enum text: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneText // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneText
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneText
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneText: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.text] = [
      .noneText,
    ]

  }

  enum textDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.textDecoder] = [
      .noneTextDecoder,
    ]

  }

  enum TextFormatDecoder: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatDecoder // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatDecoder
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatDecoder
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatDecoder: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecoder] = [
      .noneTextFormatDecoder,
    ]

  }

  enum TextFormatDecodingError: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatDecodingError // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatDecodingError
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatDecodingError
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatDecodingError: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecodingError] = [
      .noneTextFormatDecodingError,
    ]

  }

  enum TextFormatDecodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatDecodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatDecodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatDecodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatDecodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecodingOptions] = [
      .noneTextFormatDecodingOptions,
    ]

  }

  enum TextFormatEncodingOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatEncodingOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatEncodingOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatEncodingOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatEncodingOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatEncodingOptions] = [
      .noneTextFormatEncodingOptions,
    ]

  }

  enum TextFormatEncodingVisitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatEncodingVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatEncodingVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatEncodingVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatEncodingVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatEncodingVisitor] = [
      .noneTextFormatEncodingVisitor,
    ]

  }

  enum textFormatString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTextFormatString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTextFormatString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTextFormatString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTextFormatString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.textFormatString] = [
      .noneTextFormatString,
    ]

  }

  enum throwOrIgnore: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneThrowOrIgnore // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneThrowOrIgnore
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneThrowOrIgnore
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneThrowOrIgnore: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.throwOrIgnore] = [
      .noneThrowOrIgnore,
    ]

  }

  enum throwsEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneThrows // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneThrows
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneThrows
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneThrows: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.throwsEnum] = [
      .noneThrows,
    ]

  }

  enum timeInterval: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTimeInterval // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTimeInterval
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTimeInterval
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTimeInterval: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeInterval] = [
      .noneTimeInterval,
    ]

  }

  enum timeIntervalSince1970: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTimeIntervalSince1970 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTimeIntervalSince1970
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTimeIntervalSince1970
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTimeIntervalSince1970: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeIntervalSince1970] = [
      .noneTimeIntervalSince1970,
    ]

  }

  enum timeIntervalSinceReferenceDate: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTimeIntervalSinceReferenceDate // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTimeIntervalSinceReferenceDate
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTimeIntervalSinceReferenceDate
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTimeIntervalSinceReferenceDate: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeIntervalSinceReferenceDate] = [
      .noneTimeIntervalSinceReferenceDate,
    ]

  }

  enum Timestamp: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTimestamp // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTimestamp
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTimestamp
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTimestamp: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Timestamp] = [
      .noneTimestamp,
    ]

  }

  enum tmp: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTmp // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTmp
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTmp
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTmp: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tmp] = [
      .noneTmp,
    ]

  }

  enum tooLarge: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTooLarge // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTooLarge
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTooLarge
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTooLarge: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tooLarge] = [
      .noneTooLarge,
    ]

  }

  enum total: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTotal // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTotal
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTotal
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTotal: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.total] = [
      .noneTotal,
    ]

  }

  enum totalArrayDepth: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTotalArrayDepth // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTotalArrayDepth
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTotalArrayDepth
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTotalArrayDepth: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.totalArrayDepth] = [
      .noneTotalArrayDepth,
    ]

  }

  enum totalSize: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTotalSize // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTotalSize
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTotalSize
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTotalSize: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.totalSize] = [
      .noneTotalSize,
    ]

  }

  enum trailingComments: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTrailingComments // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTrailingComments
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTrailingComments
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTrailingComments: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trailingComments] = [
      .noneTrailingComments,
    ]

  }

  enum traverseEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTraverse // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTraverse
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTraverse
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTraverse: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.traverseEnum] = [
      .noneTraverse,
    ]

  }

  enum trim: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTrim // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTrim
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTrim
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTrim: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trim] = [
      .noneTrim,
    ]

  }

  enum trueEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTrue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTrue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTrue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTrue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trueEnum] = [
      .noneTrue,
    ]

  }

  enum tryEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTry // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTry
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTry
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTry: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tryEnum] = [
      .noneTry,
    ]

  }

  enum type: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.type] = [
      .noneType,
    ]

  }

  enum typealiasEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypealias // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypealias
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypealias
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypealias: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typealiasEnum] = [
      .noneTypealias,
    ]

  }

  enum TypeEnumEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypeEnum // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypeEnum
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypeEnum
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypeEnum: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TypeEnumEnum] = [
      .noneTypeEnum,
    ]

  }

  enum typeName: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypeName // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypeName
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypeName
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypeName: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeName] = [
      .noneTypeName,
    ]

  }

  enum typePrefix: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypePrefix // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypePrefix
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypePrefix
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypePrefix: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typePrefix] = [
      .noneTypePrefix,
    ]

  }

  enum typeStart: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypeStart // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypeStart
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypeStart
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypeStart: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeStart] = [
      .noneTypeStart,
    ]

  }

  enum typeUnknown: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypeUnknown // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypeUnknown
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypeUnknown
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypeUnknown: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeUnknown] = [
      .noneTypeUnknown,
    ]

  }

  enum typeURL: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneTypeURL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneTypeURL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneTypeURL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneTypeURL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeURL] = [
      .noneTypeURL,
    ]

  }

  enum UInt32Enum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUint32 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUint32
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUint32
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUint32: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt32Enum] = [
      .noneUint32,
    ]

  }

  enum UInt32Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUint32Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUint32Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUint32Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUint32Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt32Value] = [
      .noneUint32Value,
    ]

  }

  enum UInt64Enum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUint64 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUint64
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUint64
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUint64: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt64Enum] = [
      .noneUint64,
    ]

  }

  enum UInt64Value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUint64Value // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUint64Value
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUint64Value
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUint64Value: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt64Value] = [
      .noneUint64Value,
    ]

  }

  enum UInt8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUint8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUint8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUint8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUint8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt8] = [
      .noneUint8,
    ]

  }

  enum unchecked: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnchecked // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnchecked
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnchecked
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnchecked: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unchecked] = [
      .noneUnchecked,
    ]

  }

  enum unicodeScalarLiteral: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnicodeScalarLiteral // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnicodeScalarLiteral
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnicodeScalarLiteral
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnicodeScalarLiteral: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unicodeScalarLiteral] = [
      .noneUnicodeScalarLiteral,
    ]

  }

  enum UnicodeScalarLiteralType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnicodeScalarLiteralType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnicodeScalarLiteralType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnicodeScalarLiteralType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnicodeScalarLiteralType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnicodeScalarLiteralType] = [
      .noneUnicodeScalarLiteralType,
    ]

  }

  enum unicodeScalars: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnicodeScalars // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnicodeScalars
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnicodeScalars
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnicodeScalars: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unicodeScalars] = [
      .noneUnicodeScalars,
    ]

  }

  enum UnicodeScalarView: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnicodeScalarView // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnicodeScalarView
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnicodeScalarView
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnicodeScalarView: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnicodeScalarView] = [
      .noneUnicodeScalarView,
    ]

  }

  enum uninterpretedOption: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUninterpretedOption // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUninterpretedOption
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUninterpretedOption
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUninterpretedOption: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.uninterpretedOption] = [
      .noneUninterpretedOption,
    ]

  }

  enum union: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnion // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnion
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnion
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnion: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.union] = [
      .noneUnion,
    ]

  }

  enum uniqueStorage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUniqueStorage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUniqueStorage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUniqueStorage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUniqueStorage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.uniqueStorage] = [
      .noneUniqueStorage,
    ]

  }

  enum unknown: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnknown // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnknown
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnknown
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnknown: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unknown] = [
      .noneUnknown,
    ]

  }

  enum unknownFieldsEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnknownFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnknownFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnknownFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnknownFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unknownFieldsEnum] = [
      .noneUnknownFields,
    ]

  }

  enum UnknownStorage: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnknownStorage // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnknownStorage
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnknownStorage
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnknownStorage: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnknownStorage] = [
      .noneUnknownStorage,
    ]

  }

  enum unpackTo: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnpackTo // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnpackTo
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnpackTo
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnpackTo: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unpackTo] = [
      .noneUnpackTo,
    ]

  }

  enum UnsafeBufferPointer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnsafeBufferPointer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnsafeBufferPointer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnsafeBufferPointer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnsafeBufferPointer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeBufferPointer] = [
      .noneUnsafeBufferPointer,
    ]

  }

  enum UnsafeMutablePointer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnsafeMutablePointer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnsafeMutablePointer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnsafeMutablePointer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnsafeMutablePointer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeMutablePointer] = [
      .noneUnsafeMutablePointer,
    ]

  }

  enum UnsafeMutableRawBufferPointer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnsafeMutableRawBufferPointer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnsafeMutableRawBufferPointer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnsafeMutableRawBufferPointer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnsafeMutableRawBufferPointer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeMutableRawBufferPointer] = [
      .noneUnsafeMutableRawBufferPointer,
    ]

  }

  enum UnsafeRawBufferPointer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnsafeRawBufferPointer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnsafeRawBufferPointer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnsafeRawBufferPointer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnsafeRawBufferPointer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeRawBufferPointer] = [
      .noneUnsafeRawBufferPointer,
    ]

  }

  enum UnsafeRawPointer: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnsafeRawPointer // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnsafeRawPointer
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnsafeRawPointer
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnsafeRawPointer: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeRawPointer] = [
      .noneUnsafeRawPointer,
    ]

  }

  enum unverifiedLazy: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUnverifiedLazy // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUnverifiedLazy
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUnverifiedLazy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUnverifiedLazy: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unverifiedLazy] = [
      .noneUnverifiedLazy,
    ]

  }

  enum updatedOptions: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUpdatedOptions // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUpdatedOptions
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUpdatedOptions
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUpdatedOptions: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.updatedOptions] = [
      .noneUpdatedOptions,
    ]

  }

  enum url: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneURL // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneURL
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneURL
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneURL: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.url] = [
      .noneURL,
    ]

  }

  enum useDeterministicOrdering: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUseDeterministicOrdering // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUseDeterministicOrdering
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUseDeterministicOrdering
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUseDeterministicOrdering: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.useDeterministicOrdering] = [
      .noneUseDeterministicOrdering,
    ]

  }

  enum utf8: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUtf8 // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUtf8
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUtf8
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUtf8: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8] = [
      .noneUtf8,
    ]

  }

  enum utf8Ptr: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUtf8Ptr // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUtf8Ptr
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUtf8Ptr
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUtf8Ptr: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8Ptr] = [
      .noneUtf8Ptr,
    ]

  }

  enum utf8ToDouble: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUtf8ToDouble // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUtf8ToDouble
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUtf8ToDouble
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUtf8ToDouble: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8ToDouble] = [
      .noneUtf8ToDouble,
    ]

  }

  enum utf8Validation: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUtf8Validation // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUtf8Validation
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUtf8Validation
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUtf8Validation: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8Validation] = [
      .noneUtf8Validation,
    ]

  }

  enum UTF8View: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneUtf8View // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneUtf8View
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneUtf8View
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneUtf8View: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UTF8View] = [
      .noneUtf8View,
    ]

  }

  enum v: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneV // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneV
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneV
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneV: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.v] = [
      .noneV,
    ]

  }

  enum value: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.value] = [
      .noneValue,
    ]

  }

  enum valueField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneValueField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneValueField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneValueField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneValueField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.valueField] = [
      .noneValueField,
    ]

  }

  enum values: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneValues // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneValues
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneValues
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneValues: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.values] = [
      .noneValues,
    ]

  }

  enum ValueType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneValueType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneValueType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneValueType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneValueType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ValueType] = [
      .noneValueType,
    ]

  }

  enum varEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVar // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVar
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVar
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVar: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.varEnum] = [
      .noneVar,
    ]

  }

  enum verification: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVerification // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVerification
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVerification
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVerification: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.verification] = [
      .noneVerification,
    ]

  }

  enum VerificationState: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVerificationState // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVerificationState
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVerificationState
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVerificationState: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.VerificationState] = [
      .noneVerificationState,
    ]

  }

  enum Version: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVersion // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVersion
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVersion
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVersion: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Version] = [
      .noneVersion,
    ]

  }

  enum versionString: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVersionString // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVersionString
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVersionString
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVersionString: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.versionString] = [
      .noneVersionString,
    ]

  }

  enum visitExtensionFields: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitExtensionFields // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitExtensionFields
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitExtensionFields
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitExtensionFields: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitExtensionFields] = [
      .noneVisitExtensionFields,
    ]

  }

  enum visitExtensionFieldsAsMessageSet: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitExtensionFieldsAsMessageSet // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitExtensionFieldsAsMessageSet
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitExtensionFieldsAsMessageSet
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitExtensionFieldsAsMessageSet: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitExtensionFieldsAsMessageSet] = [
      .noneVisitExtensionFieldsAsMessageSet,
    ]

  }

  enum visitMapField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitMapField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitMapField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitMapField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitMapField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitMapField] = [
      .noneVisitMapField,
    ]

  }

  enum visitor: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitor // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitor
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitor
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitor: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitor] = [
      .noneVisitor,
    ]

  }

  enum visitPacked: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPacked // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPacked
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPacked
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPacked: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPacked] = [
      .noneVisitPacked,
    ]

  }

  enum visitPackedBoolField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedBoolField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedBoolField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedBoolField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedBoolField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedBoolField] = [
      .noneVisitPackedBoolField,
    ]

  }

  enum visitPackedDoubleField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedDoubleField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedDoubleField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedDoubleField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedDoubleField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedDoubleField] = [
      .noneVisitPackedDoubleField,
    ]

  }

  enum visitPackedEnumField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedEnumField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedEnumField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedEnumField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedEnumField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedEnumField] = [
      .noneVisitPackedEnumField,
    ]

  }

  enum visitPackedFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedFixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedFixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedFixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedFixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFixed32Field] = [
      .noneVisitPackedFixed32Field,
    ]

  }

  enum visitPackedFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedFixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedFixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedFixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedFixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFixed64Field] = [
      .noneVisitPackedFixed64Field,
    ]

  }

  enum visitPackedFloatField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedFloatField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedFloatField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedFloatField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedFloatField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFloatField] = [
      .noneVisitPackedFloatField,
    ]

  }

  enum visitPackedInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedInt32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedInt32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedInt32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedInt32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedInt32Field] = [
      .noneVisitPackedInt32Field,
    ]

  }

  enum visitPackedInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedInt64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedInt64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedInt64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedInt64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedInt64Field] = [
      .noneVisitPackedInt64Field,
    ]

  }

  enum visitPackedSFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedSfixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedSfixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedSfixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedSfixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSFixed32Field] = [
      .noneVisitPackedSfixed32Field,
    ]

  }

  enum visitPackedSFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedSfixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedSfixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedSfixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedSfixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSFixed64Field] = [
      .noneVisitPackedSfixed64Field,
    ]

  }

  enum visitPackedSInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedSint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedSint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedSint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedSint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSInt32Field] = [
      .noneVisitPackedSint32Field,
    ]

  }

  enum visitPackedSInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedSint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedSint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedSint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedSint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSInt64Field] = [
      .noneVisitPackedSint64Field,
    ]

  }

  enum visitPackedUInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedUint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedUint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedUint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedUint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedUInt32Field] = [
      .noneVisitPackedUint32Field,
    ]

  }

  enum visitPackedUInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitPackedUint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitPackedUint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitPackedUint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitPackedUint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedUInt64Field] = [
      .noneVisitPackedUint64Field,
    ]

  }

  enum visitRepeated: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeated // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeated
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeated
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeated: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeated] = [
      .noneVisitRepeated,
    ]

  }

  enum visitRepeatedBoolField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedBoolField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedBoolField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedBoolField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedBoolField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedBoolField] = [
      .noneVisitRepeatedBoolField,
    ]

  }

  enum visitRepeatedBytesField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedBytesField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedBytesField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedBytesField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedBytesField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedBytesField] = [
      .noneVisitRepeatedBytesField,
    ]

  }

  enum visitRepeatedDoubleField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedDoubleField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedDoubleField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedDoubleField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedDoubleField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedDoubleField] = [
      .noneVisitRepeatedDoubleField,
    ]

  }

  enum visitRepeatedEnumField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedEnumField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedEnumField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedEnumField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedEnumField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedEnumField] = [
      .noneVisitRepeatedEnumField,
    ]

  }

  enum visitRepeatedFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedFixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedFixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedFixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedFixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFixed32Field] = [
      .noneVisitRepeatedFixed32Field,
    ]

  }

  enum visitRepeatedFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedFixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedFixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedFixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedFixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFixed64Field] = [
      .noneVisitRepeatedFixed64Field,
    ]

  }

  enum visitRepeatedFloatField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedFloatField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedFloatField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedFloatField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedFloatField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFloatField] = [
      .noneVisitRepeatedFloatField,
    ]

  }

  enum visitRepeatedGroupField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedGroupField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedGroupField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedGroupField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedGroupField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedGroupField] = [
      .noneVisitRepeatedGroupField,
    ]

  }

  enum visitRepeatedInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedInt32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedInt32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedInt32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedInt32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedInt32Field] = [
      .noneVisitRepeatedInt32Field,
    ]

  }

  enum visitRepeatedInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedInt64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedInt64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedInt64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedInt64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedInt64Field] = [
      .noneVisitRepeatedInt64Field,
    ]

  }

  enum visitRepeatedMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedMessageField] = [
      .noneVisitRepeatedMessageField,
    ]

  }

  enum visitRepeatedSFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedSfixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedSfixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedSfixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedSfixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSFixed32Field] = [
      .noneVisitRepeatedSfixed32Field,
    ]

  }

  enum visitRepeatedSFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedSfixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedSfixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedSfixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedSfixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSFixed64Field] = [
      .noneVisitRepeatedSfixed64Field,
    ]

  }

  enum visitRepeatedSInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedSint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedSint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedSint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedSint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSInt32Field] = [
      .noneVisitRepeatedSint32Field,
    ]

  }

  enum visitRepeatedSInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedSint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedSint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedSint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedSint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSInt64Field] = [
      .noneVisitRepeatedSint64Field,
    ]

  }

  enum visitRepeatedStringField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedStringField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedStringField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedStringField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedStringField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedStringField] = [
      .noneVisitRepeatedStringField,
    ]

  }

  enum visitRepeatedUInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedUint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedUint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedUint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedUint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedUInt32Field] = [
      .noneVisitRepeatedUint32Field,
    ]

  }

  enum visitRepeatedUInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitRepeatedUint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitRepeatedUint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitRepeatedUint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitRepeatedUint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedUInt64Field] = [
      .noneVisitRepeatedUint64Field,
    ]

  }

  enum visitSingular: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingular // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingular
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingular
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingular: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingular] = [
      .noneVisitSingular,
    ]

  }

  enum visitSingularBoolField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularBoolField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularBoolField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularBoolField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularBoolField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularBoolField] = [
      .noneVisitSingularBoolField,
    ]

  }

  enum visitSingularBytesField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularBytesField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularBytesField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularBytesField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularBytesField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularBytesField] = [
      .noneVisitSingularBytesField,
    ]

  }

  enum visitSingularDoubleField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularDoubleField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularDoubleField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularDoubleField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularDoubleField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularDoubleField] = [
      .noneVisitSingularDoubleField,
    ]

  }

  enum visitSingularEnumField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularEnumField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularEnumField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularEnumField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularEnumField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularEnumField] = [
      .noneVisitSingularEnumField,
    ]

  }

  enum visitSingularFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularFixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularFixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularFixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularFixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFixed32Field] = [
      .noneVisitSingularFixed32Field,
    ]

  }

  enum visitSingularFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularFixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularFixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularFixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularFixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFixed64Field] = [
      .noneVisitSingularFixed64Field,
    ]

  }

  enum visitSingularFloatField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularFloatField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularFloatField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularFloatField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularFloatField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFloatField] = [
      .noneVisitSingularFloatField,
    ]

  }

  enum visitSingularGroupField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularGroupField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularGroupField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularGroupField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularGroupField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularGroupField] = [
      .noneVisitSingularGroupField,
    ]

  }

  enum visitSingularInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularInt32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularInt32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularInt32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularInt32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularInt32Field] = [
      .noneVisitSingularInt32Field,
    ]

  }

  enum visitSingularInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularInt64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularInt64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularInt64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularInt64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularInt64Field] = [
      .noneVisitSingularInt64Field,
    ]

  }

  enum visitSingularMessageField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularMessageField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularMessageField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularMessageField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularMessageField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularMessageField] = [
      .noneVisitSingularMessageField,
    ]

  }

  enum visitSingularSFixed32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularSfixed32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularSfixed32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularSfixed32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularSfixed32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSFixed32Field] = [
      .noneVisitSingularSfixed32Field,
    ]

  }

  enum visitSingularSFixed64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularSfixed64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularSfixed64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularSfixed64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularSfixed64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSFixed64Field] = [
      .noneVisitSingularSfixed64Field,
    ]

  }

  enum visitSingularSInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularSint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularSint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularSint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularSint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSInt32Field] = [
      .noneVisitSingularSint32Field,
    ]

  }

  enum visitSingularSInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularSint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularSint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularSint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularSint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSInt64Field] = [
      .noneVisitSingularSint64Field,
    ]

  }

  enum visitSingularStringField: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularStringField // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularStringField
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularStringField
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularStringField: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularStringField] = [
      .noneVisitSingularStringField,
    ]

  }

  enum visitSingularUInt32Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularUint32Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularUint32Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularUint32Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularUint32Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularUInt32Field] = [
      .noneVisitSingularUint32Field,
    ]

  }

  enum visitSingularUInt64Field: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitSingularUint64Field // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitSingularUint64Field
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitSingularUint64Field
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitSingularUint64Field: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularUInt64Field] = [
      .noneVisitSingularUint64Field,
    ]

  }

  enum visitUnknown: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneVisitUnknown // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneVisitUnknown
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneVisitUnknown
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneVisitUnknown: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitUnknown] = [
      .noneVisitUnknown,
    ]

  }

  enum wasDecoded: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWasDecoded // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWasDecoded
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWasDecoded
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWasDecoded: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wasDecoded] = [
      .noneWasDecoded,
    ]

  }

  enum weak: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWeak // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWeak
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWeak
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWeak: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.weak] = [
      .noneWeak,
    ]

  }

  enum weakDependency: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWeakDependency // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWeakDependency
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWeakDependency
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWeakDependency: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.weakDependency] = [
      .noneWeakDependency,
    ]

  }

  enum whereEnum: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWhere // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWhere
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWhere
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWhere: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.whereEnum] = [
      .noneWhere,
    ]

  }

  enum wireFormat: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWireFormat // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWireFormat
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWireFormat
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWireFormat: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wireFormat] = [
      .noneWireFormat,
    ]

  }

  enum with: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWith // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWith
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWith
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWith: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.with] = [
      .noneWith,
    ]

  }

  enum withUnsafeBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWithUnsafeBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWithUnsafeBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWithUnsafeBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWithUnsafeBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.withUnsafeBytes] = [
      .noneWithUnsafeBytes,
    ]

  }

  enum withUnsafeMutableBytes: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWithUnsafeMutableBytes // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWithUnsafeMutableBytes
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWithUnsafeMutableBytes
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWithUnsafeMutableBytes: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.withUnsafeMutableBytes] = [
      .noneWithUnsafeMutableBytes,
    ]

  }

  enum work: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWork // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWork
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWork
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWork: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.work] = [
      .noneWork,
    ]

  }

  enum Wrapped: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWrapped // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWrapped
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWrapped
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWrapped: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Wrapped] = [
      .noneWrapped,
    ]

  }

  enum WrappedType: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWrappedType // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWrappedType
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWrappedType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWrappedType: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.WrappedType] = [
      .noneWrappedType,
    ]

  }

  enum wrappedValue: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWrappedValue // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWrappedValue
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWrappedValue
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWrappedValue: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wrappedValue] = [
      .noneWrappedValue,
    ]

  }

  enum written: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneWritten // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneWritten
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneWritten
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneWritten: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.written] = [
      .noneWritten,
    ]

  }

  enum yday: AppleSwiftProtobuf.Enum, Swift.CaseIterable {
    typealias RawValue = Int
    case noneYday // = 0
    case UNRECOGNIZED(Int)

    init() {
      self = .noneYday
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noneYday
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .noneYday: return 0
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static let allCases: [SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.yday] = [
      .noneYday,
    ]

  }

  init() {}
}

// MARK: - Code below here is support for the AppleSwiftProtobuf runtime.

fileprivate let _protobuf_package = "swift_proto_testing.generated"

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums: AppleSwiftProtobuf.Message, AppleSwiftProtobuf._MessageImplementationBase, AppleSwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GeneratedSwiftReservedEnums"
  static let _protobuf_nameMap = AppleSwiftProtobuf._NameMap()

  mutating func decodeMessage<D: AppleSwiftProtobuf.Decoder>(decoder: inout D) throws {
    // Load everything into unknown fields
    while try decoder.nextFieldNumber() != nil {}
  }

  func traverse<V: AppleSwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums, rhs: SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.addPath: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_addPath"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.adjusted: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_adjusted"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.aggregateValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_aggregateValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.allCases: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_allCases"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.allowAlias: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_allowAlias"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.alwaysPrintEnumsAsInts: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_alwaysPrintEnumsAsInts"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.alwaysPrintInt64sAsNumbers: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_alwaysPrintInt64sAsNumbers"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.annotation: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_annotation"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.any: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_any"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AnyExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyMessageExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AnyMessageExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyMessageStorage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AnyMessageStorage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AnyUnpackError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AnyUnpackError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Api: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Api"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appended: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_appended"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appendUIntHex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_appendUIntHex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.appendUnknown: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_appendUnknown"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.areAllInitialized: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_areAllInitialized"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Array: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Array"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arrayDepth: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_arrayDepth"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arrayLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_arrayLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.arraySeparator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_arraySeparator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_as"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asciiOpenCurlyBracket: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_asciiOpenCurlyBracket"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.asciiZero: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_asciiZero"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.async: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_async"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncIterator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AsyncIterator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncIteratorProtocol: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AsyncIteratorProtocol"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AsyncMessageSequence: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AsyncMessageSequence"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.available: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_available"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.b: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_b"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Base: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Base"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.base64Values: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_base64Values"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.baseAddress: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_baseAddress"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BaseType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BaseType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.begin: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_begin"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binary: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_binary"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryDecoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryDecodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDecodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryDecodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryDelimited: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryDelimited"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingMessageSetSizeVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingMessageSetSizeVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingMessageSetVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingMessageSetVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingSizeVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingSizeVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryEncodingVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryEncodingVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_binaryOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryProtobufDelimitedMessages: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_binaryProtobufDelimitedMessages"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BinaryStreamDecoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BinaryStreamDecoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.binaryStreamDecodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_binaryStreamDecodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bitPattern: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_bitPattern"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.body: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_body"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BoolEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Bool"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.booleanLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_booleanLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BooleanLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BooleanLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.boolValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_boolValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.buffer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_buffer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_bytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesInGroup: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_bytesInGroup"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesNeeded: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_bytesNeeded"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.bytesRead: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_bytesRead"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.BytesValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_BytesValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.c: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_c"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.canonical: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_canonical"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.capitalizeNext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_capitalizeNext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.cardinality: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_cardinality"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CaseIterable: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_CaseIterable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.castedValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_castedValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ccEnableArenas: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ccEnableArenas"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ccGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ccGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Character: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Character"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.chars: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_chars"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.chunk: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_chunk"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.classEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_class"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearAggregateValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearAggregateValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearAllowAlias: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearAllowAlias"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearBegin: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearBegin"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCcEnableArenas: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearCcEnableArenas"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCcGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearCcGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearClientStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearClientStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCsharpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearCsharpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearCtype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearCtype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDebugRedact: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDebugRedact"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDefaultValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDefaultValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDeprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDeprecatedLegacyJsonFieldConflicts"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDeprecationWarning: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDeprecationWarning"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearDoubleValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearDoubleValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionDeprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEditionDeprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionIntroduced: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEditionIntroduced"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEditionRemoved: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEditionRemoved"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEnd: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEnd"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearEnumType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearEnumType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearExtendee: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearExtendee"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearExtensionValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearExtensionValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFeatureSupport: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearFeatureSupport"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFieldPresence: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearFieldPresence"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFixedFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearFixedFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearFullName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearFullName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearGoPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearGoPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIdempotencyLevel: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearIdempotencyLevel"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIdentifierValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearIdentifierValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearInputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearInputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearIsExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearIsExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaGenerateEqualsAndHash: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaGenerateEqualsAndHash"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaMultipleFiles: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaMultipleFiles"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaOuterClassname: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaOuterClassname"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJavaStringCheckUtf8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJavaStringCheckUtf8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJsonFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJsonFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJsonName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJsonName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearJstype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearJstype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLabel: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearLabel"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearLazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearLeadingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearLeadingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMapEntry: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearMapEntry"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMaximumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearMaximumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMessageEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearMessageEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMessageSetWireFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearMessageSetWireFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearMinimumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearMinimumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNamePart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearNamePart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNegativeIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearNegativeIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNoStandardDescriptorAccessor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearNoStandardDescriptorAccessor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearObjcClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearObjcClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOneofIndex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearOneofIndex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOptimizeFor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearOptimizeFor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOutputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearOutputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearOverridableFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearOverridableFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPacked: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPacked"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPhpClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpMetadataNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPhpMetadataNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPhpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPhpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPositiveIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPositiveIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearProto3Optional: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearProto3Optional"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearPyGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearPyGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRepeated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearRepeated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRepeatedFieldEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearRepeatedFieldEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearReserved: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearReserved"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRetention: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearRetention"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearRubyPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearRubyPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSemantic: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSemantic"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearServerStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearServerStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSourceCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceContext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSourceContext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSourceFile: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSourceFile"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearStart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearStart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearStringValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearStringValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSwiftPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSwiftPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearSyntax: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearSyntax"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearTrailingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearTrailingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearTypeName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearTypeName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearUnverifiedLazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearUnverifiedLazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearUtf8Validation: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearUtf8Validation"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearVerification: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearVerification"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clearWeak: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clearWeak"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.clientStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_clientStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.code: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_code"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.codePoint: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_codePoint"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.codeUnits: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_codeUnits"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Collection: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Collection"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.com: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_com"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.comma: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_comma"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.consumedBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_consumedBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.contains: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_contains"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.contentsOf: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_contentsOf"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ContiguousBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ContiguousBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.copy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_copy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.count: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_count"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.countVarintsInBuffer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_countVarintsInBuffer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.csharpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_csharpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ctype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ctype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.customCodable: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_customCodable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CustomDebugStringConvertible: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_CustomDebugStringConvertible"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.CustomStringConvertible: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_CustomStringConvertible"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.d: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_d"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DataEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Data"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dataResult: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_dataResult"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.date: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_date"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.daySec: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_daySec"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.daysSinceEpoch: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_daysSinceEpoch"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.debugDescriptionEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_debugDescription"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.debugRedact: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_debugRedact"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.declaration: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_declaration"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decoded: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decoded"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodedFromJSONNull: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodedFromJSONNull"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeExtensionFieldsAsMessageSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeExtensionFieldsAsMessageSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeJSON: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeJSON"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeMapField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeMapField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeMessageEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeMessage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedBoolField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedBoolField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedBytesField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedBytesField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedDoubleField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedDoubleField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedEnumField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedEnumField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedFloatField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedFloatField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedGroupField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedGroupField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedSFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedSFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedSInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedSInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedSInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedStringField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedStringField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedUInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedUInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeRepeatedUInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeRepeatedUInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingular: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingular"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularBoolField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularBoolField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularBytesField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularBytesField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularDoubleField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularDoubleField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularEnumField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularEnumField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularFloatField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularFloatField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularGroupField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularGroupField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularSFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularSFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularSInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularSInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularSInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularStringField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularStringField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularUInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularUInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeSingularUInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeSingularUInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.decodeTextFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_decodeTextFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaultAnyTypeURLPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_defaultAnyTypeURLPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaults: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_defaults"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.defaultValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_defaultValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dependency: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_dependency"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_deprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_deprecatedLegacyJsonFieldConflicts"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.deprecationWarning: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_deprecationWarning"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.descriptionEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_description"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_DescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Dictionary: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Dictionary"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.dictionaryLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_dictionaryLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digit"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit0: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digit0"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digit1: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digit1"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digitCount: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digitCount"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digits: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digits"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.digitValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_digitValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.discardableResult: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_discardableResult"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.discardUnknownFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_discardUnknownFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.DoubleEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Double"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.doubleValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_doubleValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Duration: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Duration"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.E: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_E"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.edition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_edition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EditionDefault: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EditionDefault"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionDefaults: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_editionDefaults"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionDeprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_editionDeprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionIntroduced: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_editionIntroduced"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.editionRemoved: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_editionRemoved"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Element: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Element"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.elements: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_elements"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.elseEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_else"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitExtensionFieldName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_emitExtensionFieldName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitFieldName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_emitFieldName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emitFieldNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_emitFieldNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Empty: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Empty"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.emptyData: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_emptyData"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodeAsBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encodeAsBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encoded: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encoded"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodedJSONString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encodedJSONString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodedSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encodedSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encodeField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encodeField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.encoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_encoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.end: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_end"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endArray: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_endArray"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_endMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endObject: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_endObject"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.endRegularField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_endRegularField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_enum"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EnumDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EnumOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumReservedRange: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EnumReservedRange"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_enumType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.enumvalue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_enumvalue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumValueDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EnumValueDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EnumValueOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_EnumValueOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.EquatableEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Equatable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Error: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Error"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExpressibleByArrayLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExpressibleByArrayLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExpressibleByDictionaryLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExpressibleByDictionaryLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extendedGraphemeClusterLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extendedGraphemeClusterLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtendedGraphemeClusterLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtendedGraphemeClusterLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extendee: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extendee"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensibleMessage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtensibleMessage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionFieldNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extensionFieldNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionFieldValueSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtensionFieldValueSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtensionMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensionRange: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extensionRange"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ExtensionRangeOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ExtensionRangeOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extensions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extensions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.extras: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_extras"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.F: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_F"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.falseEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_false"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.features: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_features"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FeatureSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSetDefaults: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FeatureSetDefaults"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FeatureSetEditionDefault: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FeatureSetEditionDefault"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.featureSupport: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_featureSupport"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldData: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldData"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldMask: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldMask"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldMaskError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldMaskError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNameCount: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldNameCount"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldNum"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldNumberForProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldNumberForProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldPresence: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldPresence"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fieldSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fieldSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldTag: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldTag"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FieldType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FieldType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.file: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_file"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FileDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileDescriptorSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FileDescriptorSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fileName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fileName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FileOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FileOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.filter: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_filter"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.final: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_final"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.finiteOnly: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_finiteOnly"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.first: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_first"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.firstItem: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_firstItem"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fixedFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fixedFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Float"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.floatLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_floatLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FloatLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.FloatValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_FloatValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_for"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forMessageName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_forMessageName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.formUnion: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_formUnion"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forReadingFrom: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_forReadingFrom"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forTypeURL: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_forTypeURL"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ForwardParser: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ForwardParser"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.forWritingInto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_forWritingInto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.from: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_from"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromAscii2: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fromAscii2"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromAscii4: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fromAscii4"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromByteOffset: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fromByteOffset"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fromHexDigit: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fromHexDigit"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.fullName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_fullName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.funcEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_func"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.function: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_function"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.G: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_G"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.GeneratedCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_GeneratedCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.get: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_get"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.getExtensionValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_getExtensionValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.googleapis: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_googleapis"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Any: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Any"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Api: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Api"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_BoolValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_BoolValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_BytesValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_BytesValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_DescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_DescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_DoubleValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_DoubleValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Duration: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Duration"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Edition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Edition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Empty: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Empty"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Enum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Enum"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_EnumDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_EnumOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_EnumValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValueDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_EnumValueDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_EnumValueOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_EnumValueOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ExtensionRangeOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_ExtensionRangeOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FeatureSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FeatureSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FeatureSetDefaults: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FeatureSetDefaults"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FieldDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldMask: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FieldMask"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FieldOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FieldOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FileDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileDescriptorSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FileDescriptorSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FileOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FileOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_FloatValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_FloatValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_GeneratedCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_GeneratedCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Int32Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Int32Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Int64Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Int64Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ListValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_ListValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MessageOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_MessageOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Method: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Method"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MethodDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_MethodDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_MethodOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_MethodOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Mixin: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Mixin"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_NullValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_NullValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_OneofDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_OneofDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_OneofOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_OneofOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Option: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Option"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ServiceDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_ServiceDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_ServiceOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_ServiceOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_SourceCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_SourceCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_SourceContext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_SourceContext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_StringValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_StringValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Struct: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Struct"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Syntax: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Syntax"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Timestamp: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Timestamp"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Type: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Type"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UInt32Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_UInt32Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UInt64Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_UInt64Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_UninterpretedOption: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_UninterpretedOption"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Google_Protobuf_Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Google_Protobuf_Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.goPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_goPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.group: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_group"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.groupFieldNumberStack: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_groupFieldNumberStack"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.groupSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_groupSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.guardEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_guard"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hadOneofValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hadOneofValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.handleConflictingOneOf: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_handleConflictingOneOf"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasAggregateValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasAggregateValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasAllowAlias: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasAllowAlias"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasBegin: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasBegin"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCcEnableArenas: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasCcEnableArenas"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCcGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasCcGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasClientStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasClientStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCsharpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasCsharpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasCtype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasCtype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDebugRedact: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDebugRedact"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDefaultValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDefaultValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDeprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecatedLegacyJsonFieldConflicts: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDeprecatedLegacyJsonFieldConflicts"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDeprecationWarning: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDeprecationWarning"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasDoubleValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasDoubleValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionDeprecated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEditionDeprecated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionIntroduced: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEditionIntroduced"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEditionRemoved: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEditionRemoved"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEnd: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEnd"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasEnumType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasEnumType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasExtendee: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasExtendee"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasExtensionValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasExtensionValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFeatureSupport: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasFeatureSupport"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFieldPresence: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasFieldPresence"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFixedFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasFixedFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasFullName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasFullName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasGoPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasGoPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hash: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hash"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.HashableEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Hashable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasher: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasher"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.HashVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_HashVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIdempotencyLevel: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasIdempotencyLevel"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIdentifierValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasIdentifierValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasInputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasInputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasIsExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasIsExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaGenerateEqualsAndHash: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaGenerateEqualsAndHash"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaMultipleFiles: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaMultipleFiles"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaOuterClassname: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaOuterClassname"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJavaStringCheckUtf8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJavaStringCheckUtf8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJsonFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJsonFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJsonName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJsonName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasJstype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasJstype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLabel: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasLabel"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasLazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasLeadingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasLeadingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMapEntry: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasMapEntry"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMaximumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasMaximumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMessageEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasMessageEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMessageSetWireFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasMessageSetWireFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasMinimumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasMinimumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNamePart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasNamePart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNegativeIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasNegativeIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNoStandardDescriptorAccessor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasNoStandardDescriptorAccessor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasObjcClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasObjcClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOneofIndex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasOneofIndex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOptimizeFor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasOptimizeFor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOutputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasOutputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasOverridableFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasOverridableFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPacked: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPacked"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPhpClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpMetadataNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPhpMetadataNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPhpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPhpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPositiveIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPositiveIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasProto3Optional: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasProto3Optional"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasPyGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasPyGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRepeated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasRepeated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRepeatedFieldEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasRepeatedFieldEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasReserved: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasReserved"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRetention: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasRetention"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasRubyPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasRubyPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSemantic: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSemantic"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasServerStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasServerStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSourceCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceContext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSourceContext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSourceFile: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSourceFile"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasStart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasStart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasStringValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasStringValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSwiftPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSwiftPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasSyntax: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasSyntax"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasTrailingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasTrailingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasTypeName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasTypeName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasUnverifiedLazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasUnverifiedLazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasUtf8Validation: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasUtf8Validation"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasVerification: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasVerification"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hasWeak: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hasWeak"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.hour: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_hour"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.i: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_i"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.idempotencyLevel: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_idempotencyLevel"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.identifierValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_identifierValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ifEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_if"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ignoreUnknownExtensionFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ignoreUnknownExtensionFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ignoreUnknownFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ignoreUnknownFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.index: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_index"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.initEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_init"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.inoutEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_inout"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.inputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_inputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.insert: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_insert"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.IntEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int32Enum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int32Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int32Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int64Enum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int64Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int64Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Int8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Int8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.integerLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_integerLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.IntegerLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_IntegerLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.intern: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_intern"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Internal: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Internal"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.InternalState: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_InternalState"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.intersect: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_intersect"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.into: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_into"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ints: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ints"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isA: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isA"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isEqual: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isEqual"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isEqualTo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isEqualTo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isInitializedEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isInitialized"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isNegative: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isNegative"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isPathValid: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isPathValid"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.isValid: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_isValid"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.itemTagsEncodedSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_itemTagsEncodedSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.iterator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_iterator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaGenerateEqualsAndHash: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaGenerateEqualsAndHash"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaMultipleFiles: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaMultipleFiles"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaOuterClassname: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaOuterClassname"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.javaStringCheckUtf8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_javaStringCheckUtf8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONDecodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONDecodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONDecodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonEncoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonEncoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONEncodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONEncodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONEncodingVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONEncodingVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONMapEncodingVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONMapEncodingVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonPath: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonPath"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonPaths: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonPaths"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.JSONScanner: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_JSONScanner"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonText: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonText"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonUTF8Bytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonUTF8Bytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jsonUTF8Data: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jsonUTF8Data"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.jstype: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_jstype"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.k: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_k"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.kChunkSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_kChunkSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Key: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Key"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.keyField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_keyField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.keyFieldOpt: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_keyFieldOpt"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.KeyType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_KeyType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.kind: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_kind"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.l: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_l"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.label: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_label"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_lazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.leadingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_leadingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.leadingDetachedComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_leadingDetachedComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.length: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_length"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lessThan: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_lessThan"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.letEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_let"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.lhs: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_lhs"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.line: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_line"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.list: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_list"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.listOfMessages: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_listOfMessages"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.listValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_listValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.littleEndian: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_littleEndian"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.load: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_load"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.localHasher: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_localHasher"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.location: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_location"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.M: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_M"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.major: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_major"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.makeAsyncIterator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_makeAsyncIterator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.makeIterator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_makeIterator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.malformedLength: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_malformedLength"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapEntry: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mapEntry"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MapKeyType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MapKeyType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapToMessages: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mapToMessages"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MapValueType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MapValueType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mapVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mapVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mask: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mask"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.maximumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_maximumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mdayStart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mdayStart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.merge: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_merge"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MergeOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MergeOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.message: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_message"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageDepthLimit: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_messageDepthLimit"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_messageEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MessageExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageImplementationBase: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MessageImplementationBase"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MessageOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MessageSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MessageSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageSetWireFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_messageSetWireFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_messageSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.messageType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_messageType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Method: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Method"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MethodDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MethodDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.MethodOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_MethodOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.methods: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_methods"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.min: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_min"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.minimumEdition: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_minimumEdition"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.minor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_minor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Mixin: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Mixin"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mixins: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mixins"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.modify: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_modify"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.month: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_month"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.msgExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_msgExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.mutating: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_mutating"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.n: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_n"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.name: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_name"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NameDescription: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_NameDescription"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NameMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_NameMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.NamePart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_NamePart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.names: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_names"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nanos: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nanos"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.negativeIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_negativeIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nestedType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nestedType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newExtensible: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_newExtensible"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newL: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_newL"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newList: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_newList"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newMessage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_newMessage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.newValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_newValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.next: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_next"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextByte: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nextByte"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextFieldNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nextFieldNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nextVarInt: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nextVarInt"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nilEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nil"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nilLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nilLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.noBytesAvailable: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_noBytesAvailable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.noStandardDescriptorAccessor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_noStandardDescriptorAccessor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.nullValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_nullValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.number: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_number"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.numberValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_numberValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.objcClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_objcClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.of: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_of"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofDecl: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_oneofDecl"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneofDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OneofDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofIndex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_oneofIndex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneofOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OneofOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.oneofs: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_oneofs"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OneOf_Kind: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OneOf_Kind"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.optimizeFor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_optimizeFor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptimizeMode: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptimizeMode"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Option: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Option"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalEnumExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionalEnumExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionalExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalGroupExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionalGroupExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionalMessageExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionalMessageExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionRetention: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionRetention"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.options: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_options"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.OptionTargetType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_OptionTargetType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.other: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_other"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.others: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_others"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.out: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_out"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.outputType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_outputType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.overridableFeatures: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_overridableFeatures"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.p: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_p"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.package: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_package"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.packed: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_packed"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PackedEnumExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_PackedEnumExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PackedExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_PackedExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.padding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_padding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.parent: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_parent"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.parse: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_parse"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.partial: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_partial"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.path: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_path"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_PathDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathDecodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_PathDecodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.paths: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_paths"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.PathVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_PathVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.payload: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_payload"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.payloadSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_payloadSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpClassPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_phpClassPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpMetadataNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_phpMetadataNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.phpNamespace: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_phpNamespace"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.pos: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_pos"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.positiveIntValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_positiveIntValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.prefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_prefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.preserveProtoFieldNames: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_preserveProtoFieldNames"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.preTraverse: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_preTraverse"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.prevPath: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_prevPath"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.printUnknownFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_printUnknownFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto2: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_proto2"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto3DefaultValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_proto3DefaultValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.proto3Optional: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_proto3Optional"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufAPIVersionCheck: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufAPIVersionCheck"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufAPIVersion_2: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufAPIVersion_2"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufBool: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufBool"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufDouble: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufDouble"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufEnumMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufEnumMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobufExtension: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobufExtension"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFixed32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufFixed32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFixed64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufFixed64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufFloat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufFloat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufInt32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufInt32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufMessageMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufMessageMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSFixed32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufSFixed32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSFixed64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufSFixed64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSInt32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufSInt32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufSInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufSInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufUInt32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufUInt32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtobufUInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtobufUInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_extensionFieldValues: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_extensionFieldValues"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_fieldNumber: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_fieldNumber"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_generated_isEqualTo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_generated_isEqualTo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_nameMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_nameMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_newField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_newField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protobuf_package: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protobuf_package"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protocolEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protocol"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoFieldName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protoFieldName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoMessageNameEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protoMessageName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ProtoNameProviding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ProtoNameProviding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.protoPaths: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_protoPaths"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.publicEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_public"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.publicDependency: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_publicDependency"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putBoolValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putBoolValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putBytesValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putBytesValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putDoubleValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putDoubleValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putEnumValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putEnumValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFixedUInt32: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putFixedUInt32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFixedUInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putFixedUInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putFloatValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putFloatValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putStringValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putStringValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putUInt64: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putUInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putUInt64Hex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putUInt64Hex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putVarInt: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putVarInt"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.putZigZagVarInt: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_putZigZagVarInt"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.pyGenericServices: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_pyGenericServices"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.R: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_R"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rawChars: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_rawChars"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RawRepresentable: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RawRepresentable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RawValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RawValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.read4HexDigits: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_read4HexDigits"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.readBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_readBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.register: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_register"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.removingAllFieldsOf: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_removingAllFieldsOf"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_repeated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedEnumExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RepeatedEnumExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RepeatedExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeatedFieldEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_repeatedFieldEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedGroupExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RepeatedGroupExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.RepeatedMessageExtensionField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_RepeatedMessageExtensionField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.repeating: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_repeating"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.replaceRepeatedFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_replaceRepeatedFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requestStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_requestStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requestTypeURL: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_requestTypeURL"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.requiredSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_requiredSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.responseStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_responseStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.responseTypeURL: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_responseTypeURL"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.result: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_result"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.retention: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_retention"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rethrowsEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_rethrows"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.returnEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_return"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ReturnType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ReturnType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.revision: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_revision"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rhs: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_rhs"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.root: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_root"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.rubyPackage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_rubyPackage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.s: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_s"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawBackslash: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sawBackslash"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawSection4Characters: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sawSection4Characters"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sawSection5Characters: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sawSection5Characters"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.scan: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_scan"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.scanner: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_scanner"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.seconds: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_seconds"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.selfEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_self"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.semantic: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_semantic"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SendableEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Sendable"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.separator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_separator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serialize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_serialize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_serializedBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedData: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_serializedData"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serializedSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_serializedSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.serverStreaming: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_serverStreaming"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.service: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_service"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ServiceDescriptorProto: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ServiceDescriptorProto"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ServiceOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ServiceOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.set: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_set"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.setExtensionValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_setExtensionValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.shift: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_shift"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SimpleExtensionMap: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_SimpleExtensionMap"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.size: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_size"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sizer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sizer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.source: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_source"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceCodeInfo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sourceCodeInfo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceContext: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sourceContext"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceEncoding: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sourceEncoding"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.sourceFile: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_sourceFile"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SourceLocation: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_SourceLocation"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.span: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_span"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.split: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_split"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.start: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_start"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startArray: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startArray"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startArrayObject: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startArrayObject"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startIndex: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startIndex"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startObject: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startObject"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.startRegularField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_startRegularField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.state: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_state"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.staticEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_static"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StaticString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_StaticString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.storage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_storage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StringEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_String"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_stringLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.StringLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_StringLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringResult: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_stringResult"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.stringValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_stringValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.structEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_struct"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.structValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_structValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_subDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subscriptEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_subscript"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subtract: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_subtract"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.subVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_subVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.SwiftEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Swift"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.swiftPrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_swiftPrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AppleSwiftProtobufContiguousBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AppleSwiftProtobufContiguousBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.AppleSwiftProtobufError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_AppleSwiftProtobufError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.syntax: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_syntax"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.T: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_T"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tag: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_tag"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.targets: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_targets"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.terminator: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_terminator"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.testDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_testDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.text: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_text"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.textDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_textDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecoder: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TextFormatDecoder"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecodingError: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TextFormatDecodingError"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatDecodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TextFormatDecodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatEncodingOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TextFormatEncodingOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TextFormatEncodingVisitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TextFormatEncodingVisitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.textFormatString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_textFormatString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.throwOrIgnore: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_throwOrIgnore"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.throwsEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_throws"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeInterval: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_timeInterval"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeIntervalSince1970: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_timeIntervalSince1970"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.timeIntervalSinceReferenceDate: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_timeIntervalSinceReferenceDate"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Timestamp: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Timestamp"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tmp: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_tmp"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tooLarge: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_tooLarge"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.total: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_total"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.totalArrayDepth: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_totalArrayDepth"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.totalSize: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_totalSize"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trailingComments: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_trailingComments"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.traverseEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_traverse"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trim: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_trim"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.trueEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_true"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.tryEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_try"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.type: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_type"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typealiasEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typealias"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.TypeEnumEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_TypeEnum"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeName: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typeName"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typePrefix: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typePrefix"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeStart: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typeStart"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeUnknown: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typeUnknown"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.typeURL: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_typeURL"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt32Enum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UInt32"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt32Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UInt32Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt64Enum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UInt64"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt64Value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UInt64Value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UInt8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UInt8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unchecked: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unchecked"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unicodeScalarLiteral: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unicodeScalarLiteral"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnicodeScalarLiteralType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnicodeScalarLiteralType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unicodeScalars: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unicodeScalars"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnicodeScalarView: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnicodeScalarView"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.uninterpretedOption: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_uninterpretedOption"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.union: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_union"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.uniqueStorage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_uniqueStorage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unknown: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unknown"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unknownFieldsEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unknownFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnknownStorage: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnknownStorage"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unpackTo: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unpackTo"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeBufferPointer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnsafeBufferPointer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeMutablePointer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnsafeMutablePointer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeMutableRawBufferPointer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnsafeMutableRawBufferPointer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeRawBufferPointer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnsafeRawBufferPointer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UnsafeRawPointer: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UnsafeRawPointer"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.unverifiedLazy: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_unverifiedLazy"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.updatedOptions: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_updatedOptions"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.url: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_url"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.useDeterministicOrdering: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_useDeterministicOrdering"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_utf8"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8Ptr: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_utf8Ptr"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8ToDouble: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_utf8ToDouble"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.utf8Validation: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_utf8Validation"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.UTF8View: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_UTF8View"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.v: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_v"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.value: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_value"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.valueField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_valueField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.values: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_values"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.ValueType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_ValueType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.varEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_var"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.verification: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_verification"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.VerificationState: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_VerificationState"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Version: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Version"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.versionString: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_versionString"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitExtensionFields: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitExtensionFields"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitExtensionFieldsAsMessageSet: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitExtensionFieldsAsMessageSet"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitMapField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitMapField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitor: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitor"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPacked: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPacked"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedBoolField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedBoolField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedDoubleField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedDoubleField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedEnumField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedEnumField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedFloatField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedFloatField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedSFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedSFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedSInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedSInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedSInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedUInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedUInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitPackedUInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitPackedUInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeated: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeated"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedBoolField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedBoolField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedBytesField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedBytesField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedDoubleField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedDoubleField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedEnumField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedEnumField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedFloatField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedFloatField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedGroupField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedGroupField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedSFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedSFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedSInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedSInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedSInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedStringField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedStringField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedUInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedUInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitRepeatedUInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitRepeatedUInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingular: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingular"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularBoolField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularBoolField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularBytesField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularBytesField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularDoubleField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularDoubleField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularEnumField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularEnumField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularFloatField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularFloatField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularGroupField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularGroupField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularMessageField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularMessageField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSFixed32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularSFixed32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSFixed64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularSFixed64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularSInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularSInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularSInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularStringField: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularStringField"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularUInt32Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularUInt32Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitSingularUInt64Field: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitSingularUInt64Field"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.visitUnknown: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_visitUnknown"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wasDecoded: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_wasDecoded"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.weak: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_weak"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.weakDependency: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_weakDependency"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.whereEnum: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_where"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wireFormat: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_wireFormat"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.with: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_with"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.withUnsafeBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_withUnsafeBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.withUnsafeMutableBytes: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_withUnsafeMutableBytes"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.work: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_work"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.Wrapped: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_Wrapped"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.WrappedType: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_WrappedType"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.wrappedValue: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_wrappedValue"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.written: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_written"),
  ]
}

extension SwiftProtoTesting_Generated_GeneratedSwiftReservedEnums.yday: AppleSwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: AppleSwiftProtobuf._NameMap = [
    0: .same(proto: "NONE_yday"),
  ]
}
